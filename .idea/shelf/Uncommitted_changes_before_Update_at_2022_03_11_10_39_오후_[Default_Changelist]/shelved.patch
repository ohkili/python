Index: reservation_golf_for_macmini.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\nimport chromedriver_autoinstaller\nimport time\n# from  datetime import  *\nimport pandas as pd\nimport requests\nimport json\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\nimport random\nfrom selenium.webdriver.support.ui import WebDriverWait\n\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.common.exceptions import NoSuchElementException\nfrom selenium.common.exceptions import StaleElementReferenceException\nfrom selenium.webdriver.common.alert import Alert\nfrom bs4 import BeautifulSoup\n\nimport schedule\nfrom apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.schedulers.blocking import BlockingScheduler\nfrom datetime import date\nfrom apscheduler.jobstores.base import JobLookupError\nimport ssl\nimport telegram\nimport platform\n\n# chrome driver auto install and driver activation\ndef chromedriver_autorun():\n\n    chrome_ver = chromedriver_autoinstaller.get_chrome_version().split('.')[0]  #크롬드라이버 버전 확인\n\n    try:\n        driver = webdriver.Chrome(f'./{chrome_ver}/chromedriver.exe')\n    except:\n\n        chromedriver_autoinstaller.install(True)\n        driver = webdriver.Chrome(f'./{chrome_ver}/chromedriver.exe')\n\n    driver.implicitly_wait(10)\n    return driver\n\ndef driverAct(url):\n    os_ver = platform.system()\n    plaform_ver = platform.platform()\n\n    if os_ver == 'Darwin' and plaform_ver == 'Darwin-19.6.0-x86_64-i386-64bit':\n        executable_path = '/Users/gwon-yonghwan/PycharmProjects/chromedriver'\n        # '/Users/home/PycharmProjects/chromedriver'   # '/usr/local/bin/chromedriver'  # 크롬드라이버가 보안에 막혀서 크롬드라이버를 압축풀고 해당 폴더로 이동시켜주었다\n        'driver activation for mac os'\n        driver = webdriver.Chrome(executable_path=executable_path)\n    elif os_ver == 'Darwin' and plaform_ver == 'macOS-10.16-x86_64-i386-64bit':\n        executable_path = '/Users/home/PycharmProjects/chromedriver'\n        'driver activation for mac os'\n        driver = webdriver.Chrome(executable_path=executable_path)\n\n    elif os_ver == 'Windows' and plaform_ver == 'Windows-10-10.0.19041-SP0':\n        # executable_path = \"C:\\\\Users\\ohkil\\\\PycharmProjects\\\\chromedriver_win32\\\\chromedriver.exe\"  # 크롬드라이버가 보안에 막혀서 크롬드라이버를 압축풀고 해당 폴더로 이동시켜주었다\n        # executable_path = \"C:/Users\\ohkil/PycharmProjects/chromedriver_win32/chromedriver.exe\"  # 크롬드라이버가 보안에 막혀서 크롬드라이버를 압축풀고 해당 폴더로 이동시켜주었다\n        'driver activation for windows pc'\n        driver = chromedriver_autorun()\n    else:\n        print('Check your OS type')\n        telegram_message('Check your chrome driver path or version.')\n\n    driver.set_window_size(1400, 1000)  # (가로, 세로)음\n    driver.get(url)\n    return driver\n\n# REST_API_KEY and refresh_token is borrow\nREST_API_KEY ='22644bd965c28d381ea875a9dde9e2d1'\nrefresh_token = '2hZcRLD01s1Rl0qEA0BhnenFH1om0rtTNimYSgo9cuoAAAF81jvBOA'\n\n# https://kauth.kakao.com/oauth/authorize?client_id={REST API 키}&redirect_uri=https://localhost:3000&response_type=code&scope=talk_message\n# https://kauth.kakao.com/oauth/authorize?client_id=22644bd965c28d381ea875a9dde9e2d1&redirect_uri=https://localhost:3000&response_type=code&scope=talk_message\n# 카카오톡 메시지 API\n# rest api key와 refresth token을 이용하여 access token 갱신\ndef access_token_mkr(REST_API_KEY, refresh_token):\n    url = \"https://kauth.kakao.com/oauth/token\"\n\n    data = {\n        \"grant_type\": \"refresh_token\",\n        \"client_id\": REST_API_KEY,\n        \"refresh_token\": refresh_token\n    }\n    response = requests.post(url, data=data)\n    tokens2 = response.json()\n    print(tokens2)\n\n    access_token = tokens2['access_token']\n    return access_token\n\ndef kakao_message(data, access_token):\n    url = \"https://kapi.kakao.com/v2/api/talk/memo/default/send\"\n    # access_token = 'pnvTjrwWOlNoRrFHo5IEfDco_Mi9Kf7R-vC_TQorDNMAAAF8IfKFow'  # tokens['access_token']\n\n    # 사용자 토큰\n    headers = {\n        \"Authorization\": \"Bearer \" + access_token}\n\n    data = {\n        \"template_object\": json.dumps({\"object_type\": \"text\",\n                                   \"text\": str(data),\n                                       \"link\": {\n                                           \"web_url\": \"www.naver.com\"\n                                       }\n                                       })\n    }\n\n    response = requests.post(url, headers=headers, data=data)\n    print(response.status_code)\n    if response.json().get('result_code') == 0:\n        print('메시지를 성공적으로 보냈습니다.')\n    else:\n        print('메시지를 성공적으로 보내지 못했습니다. 오류메시지 : ' + str(response.json()))\n\ndef telegram_message(content='Hello world', content_type='text', description='description'):\n    telegram_token = \"5011897744:AAFvwnQrdllp09gz2Iy_XD6SONWy1-jQuNM\"\n    telegram_chat_id = 1926421781\n    bot = telegram.Bot(token=telegram_token)\n\n\n    # Bottom is telegram bot manual\n    \"\"\" \n    # text 보내기\n    bot.sendMessage(chat_id=telegram_chat_id, text='hello world')\n    # image 보내기 image url\n    photo_url = \"https://telegram.org/img/t_logo.png\"\n    bot.sendPhoto(chat_id=telegram_chat_id, photo=photo_url, caption='telegrm logo')\n    # hyperlink 보내기\n    # 미리보기 기능 off ==>  disable_web_page_preview= True\n    # []안에 문자는 제목으로 전송되고, ()안에 hyperlink 넣어주면 됨\n    bot.send_message(chat_id=telegram_chat_id, text=\"[naver 증권](https://finance.naver.com)\", parse_mode='Markdown',\n                     disable_web_page_preview=False)\n\n    # image 보내기 image file\n    # os.getcwd()\n    # glob.glob('E:\\\\python\\\\' + '*.jpg')\n    photo_file = 'E:\\\\python\\\\주행기록.jpg'\n    bot.sendPhoto(chat_id=telegram_chat_id, photo=open(photo_file, 'rb'), caption='카니발 주행기록') \n    \"\"\"\n\n    if content_type == 'text':\n        # example is 'hello world'\n        bot.sendMessage(chat_id=telegram_chat_id, text=content)\n    elif content_type == 'imgUrl':\n        # example is  \"https://telegram.org/img/t_logo.png\"\n        bot.sendPhoto(chat_id=telegram_chat_id, photo=content, caption=description)\n    elif content_type == 'imgFile':\n        # example is 'E:\\\\python\\\\주행기록.jpg'\n        bot.sendPhoto(chat_id=telegram_chat_id, photo=open(content, 'rb'), caption=description)\n    elif content_type == 'hyperlink':\n        # []안에 문자는 제목으로 전송되고, ()안에 hyperlink 넣어주면 됨\n        #  example is \"[naver 증권](https://finance.naver.com)\"\n        content_hyperlink = \"[\" + description + \"](\" + content + \")\"\n        bot.send_message(chat_id=telegram_chat_id, text=content_hyperlink, parse_mode='Markdown',\n                         disable_web_page_preview=False)\n    else:\n        print('You must choice content_type as text, imgUrl, imgFile, hyperlink')\n\ndef good_luck_kakao():\n      print(\"Good Luck for Test\")\n      print( time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time())))\n      access_token = access_token_mkr(REST_API_KEY,refresh_token)\n      kakao_message('message test from macmini with golf '+ str( time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))),access_token)\n\ndef good_luck():\n    print(\"Good Luck for Test\")\n    print(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time())))\n    content_new =  'message test from macmini with golf ' + str(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time())))\n    telegram_message(content = content_new, content_type='text', description= 'etc' )\ndef reserve_rivera(loginfo,info_date,reserve_cnt=1,reserve_type='test', multi_date = False):\n    # info_rivera = {'url': 'https://www.shinangolf.com/',\n    #                'loginPage': 'https://www.shinangolf.com/member/login',\n    #                'id': 'ohkili',\n    #                'pw': 'Sin!1203'\n    #                }\n    # loginfo = info_rivera\n    # info_date = info_date_test\n    #\n    'log information from loginfo var. '\n    url = loginfo['url']\n    loginpage = loginfo['loginPage']\n    loginID = loginfo['id']\n    loginPW = loginfo['pw']\n    'wish date & hour information from info_date var.'\n    wish_date = info_date['wish_date']\n    wish_hour = info_date['wish_hour']\n    hour_option = info_date['hour_option']\n\n    book_try_cnt = 0\n    able_ls = []\n    driver = chromedriver_autorun()\n\n    # if reserve_cnt is True ,then reservation don't stop\n    # if reserve_cnt is False ,then reservation 1 time and stop\n    # driver.close()\n    # driver.quit()\n\n    driver.get(url)\n    driver.get(loginpage)\n\n    'id for login'\n    userId = driver.find_element(By.ID, 'memberId')  # /html/body/div/div[5]/div/div/div/div[2]/div/form/div[1]/div[1]/input\n    userId.send_keys(loginID)  # 로그인 할 계정 id\n\n    'password for login'\n    userPwd = driver.find_element(By.ID, 'key')  # /html/body/div/div[5]/div/div/div/div[2]/div/form/div[1]/div[2]/input\n    userPwd.send_keys(loginPW)\n    userPwd.send_keys(Keys.ENTER)\n\n    # log in putton userPwd에 password를 엔터를 치면 되는데, 아래처럼 로그인 버튼을 누를수도 있다\n    # loginbtn = driver.find_element(By.XPATH, \"//form[@id='loginForm']/div[@class='login_btn']\")\n    # loginbtn.click()\n\n    '통합 예약/실시간예약 접속 화면'\n    # reservation = driver.find_element(By.XPATH,\"/html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\")  # /html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\n    reservation_open = driver.find_element(By.XPATH, \"/html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\")\n    driver.execute_script(\"arguments[0].click();\", reservation_open)\n    # 아래 블럭 처리한 내용은 element에서 click을 하고 시행되지 않으면 execute_script를 쓰라는 문구인데 시간을 아끼기 위해 바로 excecute_sript를 사용하였다.\n    #  \"\"\"   try:\n    #         print(\"Element is visible? \" + str(reservation_open.is_displayed()))  # elemnet visible check\n    #         reservation_open.click()\n    #         # 에러메시지가 아래와 같이 나오면 엘리먼트가 보이지 않은것이다.\n    #         # \" selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable   (Session info: chrome=94.0.4606.61) \"\n    #\n    #         print(\"Element is visible? \" + str(reservation_open.is_displayed())) # elemnet visible check\n    #         except:\n    #\n    #              # 그러면 아래와 같이 명령을 쓰면 해결이 된다.\n    #             driver.execute_script(\"arguments[0].click();\",reservation_open)\n    # \"\"\"\n\n\n    # driver.close()\n    # 실시간 예약\n\n    \"\"\" <div id='container'>\n           <div id='content'>\n               <div class ='board_info_wrap'>\n                  <div class = 'inner'>\n                      < div class = 'page_tap_wrap'>  # 신안 계열 골프장 리스트\n                      < div class = 'month_wrap'> #달력\n                       < button type ='button' class= 'prev'> 지난달 버튼\n                       < span class ='year'>   올해 년도\n                       < span class = 'month'> 이번 달\n                       < button type = 'button' class 'next'> 다음달 버튼\n                       < div class = 'reservation_table calender_table> 예약 날짜 목록\n                         <table>\n                          <tbody> 이아래에 날짜별로 목록이 존재\n                           <tr> tr이 주간 묶음이고 하위에 <td>가 날짜를 뜻한다\n                            <td> 공란이면 해당 월에 날이 없는것을 말함(예약 가능일이 아니고 달력 기준 날짜)\n                              < div class ='day'>1 </div>  날짜\n                              < div class ='white'> 이면 예약 가능한 날이 없다는 것이다\n                              or \n                              <div class ='day'>12 </div> 예약이 가능한 경우는\n                              <a class='open' id='20211012'> 1팀/<a>  날짜와 예약 가능 팀수를 알수 있다. 클릭하면 상세 날짜가 나온다 \n                        <div id ='reservationSelect'> 예약 상세 page 위에 날짜를 선택해야 상세 page가 열림\n                          <div class ='date_wrap' > 해당 날짜\n                            < div class = 'reservation_table time_table>\n                               <table>\n                                 <thread> \n                                    <tr> 예약 상세화면의 컬럼 정보, [코스, 시간, 그린피, 예약]\n                                 <tbody> \n                                     <tr> 예약 상세정보 이게 중요한 예약 가능 정보임, \n                                        <th rowspan =2> LAKES </th>  코스 정보 및 해당 코스(LAKES) 에 몇개 예약(rowspn)이 가능한지 숫자 나옴\n                                        <td> 18:52 </td> 시간\n                                        <td> 130,000 </td> 금액\n                                        <td> \n                                           <button conclick> 예약 선택 버튼 \"\"\"\n    date_count = len(wish_date)\n    for dt in wish_date:\n\n        if date_count >0 :\n\n            try:\n                '원하는 일정 목록에서 년 월 일 정보 추'\n                wish_year = dt[:4]\n                wish_month = dt[4:6]\n                wish_day = dt[6:8]\n\n                '예약 화면의 달력으로 이동'\n                calendar = driver.find_element(By.XPATH, \"//div[@class='reservation_table calendar_table']/table/tbody\")\n\n                if reserve_type   ==  'real':\n                    pass\n                elif reserve_type == 'test':\n                    status_year  = driver.find_element(By.XPATH, \"//div[@class='month_wrap']/span[@class ='year']\").text[:4]\n                    status_month = driver.find_element(By.XPATH, \"//div[@class='month_wrap']/span[@class ='month']\").text[:2]\n                    if wish_year > status_year or wish_month > status_month :\n                        driver.find_element(By.XPATH, \"//div[@class='month_wrap]/button[@class='next']\").click()\n                    else:\n                        pass\n                    calendar_week = driver.find_elements(By.XPATH,\n                                                         \"//div[@class='reservation_table calendar_table']/table/tbody/tr\")\n                    for i in range(len(calendar_week[0].find_elements(By.XPATH, \"//td\"))):\n                        '예약 가능한 날짜 추출'\n                        s = (calendar_week[0].find_elements(By.XPATH, \"//td\")[i].text)\n                        if s.find('\\n')>0:\n                            s = s.split('\\n')[0]\n                            able_date = wish_year + wish_month + s.zfill(2)\n                            able_ls.append(able_date)\n                        else:\n                            pass\n                        '예약 가능일이 원하는 날과 같으면 예약 시도 횟수를 +1 한다'\n                        if s  == str(int(wish_day)):\n                            book_try_cnt += 1\n                        else:\n                            pass\n                        # print(i, s, able_ls, book_try_cnt)\n\n\n                else:\n                    pass\n\n            except:\n                print('macro fail : date simple check')\n                # access_token = access_token_mkr(REST_API_KEY, refresh_token)\n                # kakao_message('rivera macro fail  : date simple check  \\n' + str( time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))) , access_token)\n\n                telegram_message(content='rivera macro fail  : date simple check  \\n' + str( time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time())))\n                                 , content_type='text', description='description')\n\n            try:\n                if reserve_type == 'real':\n                    pass\n\n                elif reserve_type == 'test' and len(able_ls) >0 :\n                    '예약 타입이 test 이면서 예약 가능일이 있으면 예약 가능일 첫 날을 dt 변수에 넣는다.'\n                    dt = able_ls[0]\n                elif reserve_type == 'test' and len(able_ls) ==0 and  book_try_cnt == len(wish_date):\n                    '예약 타입이 test 이면서 예약 가능일이 없고 예약 시도횟수와 원하는 날 수가 같다면 반복문에서 빠져나'\n                    continue\n                else:\n                    print('Check book_try_cnt')\n                    continue\n\n\n                date_selected_1 = \"//tr/td/a[@class='open'  and @id =\" + \"'\" + dt + \"']\"\n                date_selected_2 = \"//tr/td/a[@class='open active'  and @id =\" + \"'\" + dt + \"']\"\n                # temp_date = calendar.find_element(By.XPATH, \"//tr/td/a[@class='open'  and @id ='20211028']\")\n                # temp_date = calendar.find_element(By.XPATH, \"//tr/td/a[@class='open active'  and @id ='20211028']\")\n                # calendar.find_element(By.XPATH, date_selected).text 에 예약이 가능하면 팀수가 나옴 없으면 예약 불가능하므로 예약 시도 cancel\n\n                if calendar.find_element(By.XPATH, date_selected_1).text.find('팀') >= 0:\n                    calendar_selected = calendar.find_element(By.XPATH, date_selected_1)\n                elif calendar.find_element(By.XPATH, date_selected_2).text.find('팀') >= 0:\n                    calendar_selected = calendar.find_element(By.XPATH, date_selected_2)\n                elif calendar.find_element(By.XPATH, date_selected_1).text.find('팀') == -1 and calendar.find_element(By.XPATH, date_selected_2).text.find('팀') == -1:   # 예약일이 없으면 바로 빠져 나와서 처리 속도를 높여줌\n                    print('There is no book', dt)\n\n                    break\n\n                else :\n                    print('Check Calendar')\n\n\n\n\n                calendar_selected.click()     # 원하는 날짜에 해당하는 달력 check\n                # calendar.find_element(By.XPATH, date_selected).text\n\n                reservation_time = driver.find_element(By.XPATH, \"//div[@class = 'reservation_table time_table']\")\n                reservation_time_list = reservation_time.find_elements(By.XPATH, \"//table/tbody/tr/td/button\")\n\n\n                # s = reservation_time_list[0].get_attribute('onclick')\n                # s = s.replace('showConfirm','').replace('(','').replace(')','').replace(\"'\",'').split(',')\n\n                # time table을 list로 만들자\n                timeTable = pd.DataFrame()\n                timeTable_columns = ['fulldate', 'day', 'hour', 'course_type', 'cousrse_name', 'price', 'unknown1',\n                                     'unknown2', 'unknown3']\n\n                for i in range(len(reservation_time_list)):\n                    s = reservation_time_list[i].get_attribute('onclick')\n                    s = s.replace('showConfirm', '').replace('(', '').replace(')', '').replace(\"'\", '').split(',')\n                    s = pd.DataFrame(data=[s])\n                    timeTable = timeTable.append(s)\n                    print(i, s)\n\n                timeTable.columns = timeTable_columns\n                timeTable.reset_index(drop=True, inplace=True)\n\n                '원하는 시간대 골라내기'\n                timeTable_filterd = pd.DataFrame()\n                for h in wish_hour:\n                    first_time = h.split('~')[0]\n                    end_time = h.split('~')[1]\n                    mask1 = (timeTable['hour'].str[0:2] >= first_time) & (\n                                timeTable['hour'].str[0:2] < end_time)  # 시간대 filter\n\n                    timeTable_sorted = timeTable.loc[mask1, :].sort_values('hour')\n                    timeTable_filterd = pd.concat([timeTable_filterd, timeTable_sorted])\n\n                timeTable_filterd.reset_index(inplace=True)\n                while(reserve_cnt > 0):\n\n                    if hour_option == 'first':\n                        index_no = timeTable_filterd['index'].iloc[0]\n                    elif hour_option == 'mid':\n                        index_no = timeTable_filterd['index'].iloc[round(len(timeTable_sorted) / 2)]\n                    elif hour_option == 'last':\n                        index_no = timeTable_filterd['index'].iloc[-1]\n\n                    idx = timeTable_filterd[timeTable_filterd['index'] == index_no].index\n                    timeTable_filterd = timeTable_filterd.drop(idx)\n\n                    # 골라낸 시간에 예약 버튼 누르기\n\n                    # reservation_time_list[index_no].get_attribute('onclick')\n                    # reservation_time_list[index_no].click()\n                    #\n                    # reservation_time_list[index_no].get_attribute('onclick')\n                    driver.execute_script(\"arguments[0].click();\", reservation_time_list[index_no])\n\n                    # 예약 확인 pop up\n\n                    popup_text = driver.find_element(By.XPATH,\n                                                     \"//div[@id='confirmModal']/div[@class='modal_content']/div[@class='confirm_modal']\").text\n                    print(popup_text)\n                    reserve_text = driver.find_element(By.XPATH,\n                                                       \"//div[@id='confirmModal']/div[@class='modal_content']/div[@class='confirm_modal']/div[@class='form_btns']/button\").text\n                    print(reserve_text)\n\n                    if reserve_type == 'real':\n                        driver.find_element(By.XPATH,\n                                        \"//div[@id='confirmModal']/div[@class='modal_content']/div[@class='confirm_modal']/div[@class='form_btns']/button\").click()\n                        # 이렇게 하면 바로 예약 됨\n                        popup_text = '[예약 완료, macro 정상 동작]\\n' +  + popup_text\n                        # kakao_message(popup_text, access_token)\n\n                        telegram_message(content=popup_text , content_type='text', description='description')\n\n                    elif   reserve_type == 'test' and reserve_text =='예약하기':\n                        # 카카오 문자 보내기\n                        driver.find_element(By.XPATH,\n                                            \"//div[@id='confirmModal']/div[@class='modal_content']/div[@class='confirm_modal']/div[@class='form_btns']/a\").click()\n                        access_token = access_token_mkr(REST_API_KEY, refresh_token)\n                        popup_text = '[예약 macro 정상 동작]\\n' + '[예약이 된것은 아님]\\n'+ popup_text\n                        # kakao_message(popup_text, access_token)\n                        telegram_message(content=popup_text, content_type='text', description='description')\n\n                    else:\n                        print('Check reserve count')\n                    reserve_cnt -= 1  # 예약 건수를 1개 줄임\n                    if multi_date == True:\n                        date_count -= 1\n                    elif multi_date == False:\n                        date_count = 0\n                    else:\n                        print('Check multidate option')\n\n\n            except:\n                print('macro fail:  targetting reserve')\n                # access_token = access_token_mkr(REST_API_KEY, refresh_token)\n                # kakao_message('rivera macro fail:  targetting reserve  \\n' + str(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))), access_token)\n                telegram_message(content='rivera macro fail:  targetting reserve  \\n' + str(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))),\n                                 content_type='text', description='description')\n\n        elif date_count == 0:\n            break\n        else :\n            print('Check date_count')\n    if book_try_cnt == len(wish_date):\n        # access_token = access_token_mkr(REST_API_KEY, refresh_token)\n        # kakao_message('There is no able day to book \\n' + str( time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))), access_token)\n        telegram_message(content='There is no able day to book \\n' + str( time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))),\n                         content_type='text', description='description')\n    else:\n        print('Check book_try_cnt')\n\n    print('book_try_cnt',book_try_cnt)\n    print('wish_date',wish_date)\n    driver.close()\ndef reserve_rivera_macmini(loginfo,info_date,reserve_try_cnt=9,reserve_type='test', multi_date = False):\n    # driver.close()\n    # loginfo = info_rivera\n    # info_date = info_date_test\n    'reserve_try_cnt means n times trying for reservation, when website clock is not sync with code'\n\n    url = loginfo['url']\n    loginpage = loginfo['loginPage']\n    loginID = loginfo['id']\n    loginPW = loginfo['pw']\n\n    wish_date = info_date['wish_date']\n    wish_hour = info_date['wish_hour']\n    hour_option = info_date['hour_option']\n\n    book_try_cnt = 0\n    reserve_succees_cnt = 0\n    reserve_need_cnt = len(wish_date) * len(wish_hour)\n    date_count = len(wish_date)\n\n    if reserve_type == 'real':\n        pass\n    elif reserve_type == 'test':\n        reserve_try_cnt = 1\n    else:\n        reserve_try_cnt =0\n        telegram_message(content='Please, check your reserve_type', content_type='text', description='description')\n\n    able_ls = []\n    try:\n        driver = driverAct(url)\n    except Exception as e:\n        telegram_message(content=repr(e),content_type='text',description='description' )\n        telegram_message(content='Check your chrome driver version', content_type='text', description='description')\n\n    driver.get(loginpage)\n    # if reserve_cnt is True ,then reservation don't stop\n    # if reserve_cnt is False ,then reservation 1 time and stop\n    # driver.close()\n    # driver.quit()\n\n\n\n    # id\n    userId = driver.find_element(By.ID, 'memberId')  # /html/body/div/div[5]/div/div/div/div[2]/div/form/div[1]/div[1]/input\n    userId.send_keys(loginID)  # 로그인 할 계정 id\n\n    # password\n    userPwd = driver.find_element(By.ID, 'key')  # /html/body/div/div[5]/div/div/div/div[2]/div/form/div[1]/div[2]/input\n    userPwd.send_keys(loginPW)\n    userPwd.send_keys(Keys.ENTER)\n\n\n\n\n    while(reserve_need_cnt > 0 and reserve_try_cnt > 0 ):\n\n        # log in putton userPwd에 password를 엔터를 치면 되는데, 아래처럼 로그인 버튼을 누를수도 있다\n        # loginbtn = driver.find_element(By.XPATH, \"//form[@id='loginForm']/div[@class='login_btn']\")\n        # loginbtn.click()\n\n        # 통합 예약/실시간예약\n        # reservation = driver.find_element(By.XPATH,\"/html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\")  # /html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\n        reservation_open = driver.find_element(By.XPATH,\n                                               \"/html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\")\n        driver.execute_script(\"arguments[0].click();\", reservation_open)\n        # 아래 블럭 처리한 내용은 element에서 click을 하고 시행되지 않으면 execute_script를 쓰라는 문구인데 시간을 아끼기 위해 바로 excecute_sript를 사용하였다.\n        #  \"\"\"   try:\n        #         print(\"Element is visible? \" + str(reservation_open.is_displayed()))  # elemnet visible check\n        #         reservation_open.click()\n        #         # 에러메시지가 아래와 같이 나오면 엘리먼트가 보이지 않은것이다.\n        #         # \" selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable   (Session info: chrome=94.0.4606.61) \"\n        #\n        #         print(\"Element is visible? \" + str(reservation_open.is_displayed())) # elemnet visible check\n        #         except:\n        #\n        #              # 그러면 아래와 같이 명령을 쓰면 해결이 된다.\n        #             driver.execute_script(\"arguments[0].click();\",reservation_open)\n        # \"\"\"\n\n        # driver.close()\n        # 실시간 예약\n\n        \"\"\" <div id='container'>\n               <div id='content'>\n                   <div class ='board_info_wrap'>\n                      <div class = 'inner'>\n                          < div class = 'page_tap_wrap'>  # 신안 계열 골프장 리스트\n                          < div class = 'month_wrap'> #달력\n                           < button type ='button' class= 'prev'> 지난달 버튼\n                           < span class ='year'>   올해 년도\n                           < span class = 'month'> 이번 달\n                           < button type = 'button' class 'next'> 다음달 버튼\n                           < div class = 'reservation_table calender_table> 예약 날짜 목록\n                             <table>\n                              <tbody> 이아래에 날짜별로 목록이 존재\n                               <tr> tr이 주간 묶음이고 하위에 <td>가 날짜를 뜻한다\n                                <td> 공란이면 해당 월에 날이 없는것을 말함(예약 가능일이 아니고 달력 기준 날짜)\n                                  < div class ='day'>1 </div>  날짜\n                                  < div class ='white'> 이면 예약 가능한 날이 없다는 것이다\n                                  or \n                                  <div class ='day'>12 </div> 예약이 가능한 경우는\n                                  <a class='open' id='20211012'> 1팀/<a>  날짜와 예약 가능 팀수를 알수 있다. 클릭하면 상세 날짜가 나온다 \n                            <div id ='reservationSelect'> 예약 상세 page 위에 날짜를 선택해야 상세 page가 열림\n                              <div class ='date_wrap' > 해당 날짜\n                                < div class = 'reservation_table time_table>\n                                   <table>\n                                     <thread> \n                                        <tr> 예약 상세화면의 컬럼 정보, [코스, 시간, 그린피, 예약]\n                                     <tbody> \n                                         <tr> 예약 상세정보 이게 중요한 예약 가능 정보임, \n                                            <th rowspan =2> LAKES </th>  코스 정보 및 해당 코스(LAKES) 에 몇개 예약(rowspn)이 가능한지 숫자 나옴\n                                            <td> 18:52 </td> 시간\n                                            <td> 130,000 </td> 금액\n                                            <td> \n                                               <button conclick> 예약 선택 버튼 \"\"\"\n\n        for dt in wish_date:\n            # dt = wish_date[0]\n            if date_count > 0:\n\n                try:\n                    wish_year  = dt[:4]\n                    wish_month = dt[4:6]\n                    wish_day   = dt[6:8]\n\n                    calendar = driver.find_element(By.XPATH, \"//div[@class='reservation_table calendar_table']/table/tbody\")\n\n                    if reserve_type   ==  'real':\n                        pass\n                    elif reserve_type == 'test':\n                        status_year  = driver.find_element(By.XPATH, \"//div[@class='month_wrap']/span[@class ='year']\").text[:4]\n                        status_month = driver.find_element(By.XPATH, \"//div[@class='month_wrap']/span[@class ='month']\").text[:2]\n                        if wish_year > status_year or wish_month > status_month :\n                            driver.find_element(By.XPATH, \"//div[@class='month_wrap']/button[@class='next']\").click()\n                        else:\n                            pass\n                        calendar_week = driver.find_elements(By.XPATH,\n                                                           \"//div[@class='reservation_table calendar_table']/table/tbody/tr\")\n\n\n                        for i in range(len(calendar_week[0].find_elements(By.XPATH, \"//td\"))):\n\n                            s = (calendar_week[0].find_elements(By.XPATH, \"//td\")[i].text)\n                            if s.find('\\n')>0:\n                                s = s.split('\\n')[0]\n                                able_date = wish_year + wish_month + s.zfill(2)\n                                able_ls.append(able_date)\n                            else:\n                                pass\n                            if s  == str(int(wish_day)):\n                                book_try_cnt += 1\n                            else:\n                                pass\n                            # print(i, s, able_ls, book_try_cnt)\n\n\n                    else:\n                        pass\n\n                except:\n                    print('macro fail : date simple check')\n                    # access_token = access_token_mkr(REST_API_KEY, refresh_token)\n                    # kakao_message('rivera macro fail  : date simple check  \\n' + str( time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))) , access_token)\n                    telegram_message(content='rivera macro fail  : date simple check  \\n' + str( time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))),\n                                     content_type='text', description='description')\n\n\n                try:\n                    if reserve_type == 'real':\n                        pass\n                    elif reserve_type == 'test' and len(able_ls) >0 :\n                        dt = able_ls[0]\n\n                    elif reserve_type == 'test' and len(able_ls) ==0 and  book_try_cnt == len(wish_date):\n\n                        pass\n                    else:\n                        print('Check book_try_cnt')\n\n\n\n                    date_selected_1 = \"//tr/td/a[@class='open'  and @id =\" + \"'\" + dt + \"']\"\n                    date_selected_2 = \"//tr/td/a[@class='open active'  and @id =\" + \"'\" + dt + \"']\"\n                    # temp_date = calendar.find_element(By.XPATH, \"//tr/td/a[@class='open'  and @id ='20211028']\")\n                    # temp_date = calendar.find_element(By.XPATH, \"//tr/td/a[@class='open active'  and @id ='20211028']\")\n                    # calendar.find_element(By.XPATH, date_selected).text 에 예약이 가능하면 팀수가 나옴 없으면 예약 불가능하므로 예약 시도 cancel\n                    try:\n                        date_check1 = calendar.find_element(By.XPATH, date_selected_1).text.find('팀')\n                    except:\n                        date_check1 = -1\n\n                    try:\n                        date_check2 =  calendar.find_element(By.XPATH, date_selected_2).text.find('팀')\n                    except:\n                        date_check2 = -1\n\n                    if date_check1 >= 0:\n                        calendar_selected = calendar.find_element(By.XPATH, date_selected_1)\n                    elif date_check2 >= 0:\n                        calendar_selected = calendar.find_element(By.XPATH, date_selected_2)\n                    elif date_check1 == -1 and date_check2 == -1:   # 예약일이 없으면 바로 빠져 나와서 처리 속도를 높여줌\n                        print('There is no book', dt)\n\n                    else :\n                        print('Check Calendar')\n\n\n\n\n                     # calendar_selected.click()     # 원하는 날짜에 해당하는 달력 check\n                    driver.execute_script(\"arguments[0].click();\", calendar_selected)\n                    # calendar.find_element(By.XPATH, date_selected).text\n                    reservation_time = WebDriverWait(driver, 30).until(\n                        EC.presence_of_all_elements_located((By.XPATH, \"//div[@class = 'reservation_table time_table']\"))\n                    )\n                    # reservation_time = driver.find_element(By.XPATH, \"//div[@class = 'reservation_table time_table']\")\n                    reservation_time_list = WebDriverWait(driver, 30).until(\n                        EC.presence_of_all_elements_located((By.XPATH, \"//table/tbody/tr/td/button\"))\n                    )\n                    # reservation_time_list = reservation_time.find_elements(By.XPATH, \"//table/tbody/tr/td/button\")\n\n\n                    # s = reservation_time_list[0].get_attribute('onclick')\n                    # s = s.replace('showConfirm','').replace('(','').replace(')','').replace(\"'\",'').split(',')\n\n                    # time table을 list로 만들자\n                    timeTable = pd.DataFrame()\n                    timeTable_columns = ['fulldate', 'day', 'hour', 'course_type', 'cousrse_name', 'price', 'unknown1',\n                                         'unknown2', 'unknown3']\n\n                    for i in range(len(reservation_time_list)):\n                        s = reservation_time_list[i].get_attribute('onclick')\n                        s = s.replace('showConfirm', '').replace('(', '').replace(')', '').replace(\"'\", '').split(',')\n                        s = pd.DataFrame(data=[s])\n                        timeTable = timeTable.append(s)\n                        print(i, s)\n\n                    timeTable.columns = timeTable_columns\n                    timeTable.reset_index(drop=True, inplace=True)\n\n                    # 원하는 시간대 골라내기\n                    timeTable_filterd = pd.DataFrame()\n                    for h in wish_hour:\n                        first_time = h.split('~')[0]\n                        end_time = h.split('~')[1]\n                        mask1 = (timeTable['hour'].str[0:2] >= first_time) & (\n                                    timeTable['hour'].str[0:2] < end_time)  # 시간대 filter\n\n                        timeTable_sorted = timeTable.loc[mask1, :].sort_values('hour')\n                        timeTable_filterd = pd.concat([timeTable_filterd, timeTable_sorted])\n\n                    timeTable_filterd.reset_index(inplace=True)\n                except:\n                    print('macro fail:  making reserve table')\n                    # access_token = access_token_mkr(REST_API_KEY, refresh_token)\n                    # kakao_message('rivera macro fail:  making reserve table \\n' + str(\n                    #     time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))), access_token)\n                    telegram_message(content='rivera macro fail:  making reserve table \\n' + str(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))),\n                                     content_type='text', description='description')\n                try:\n\n                    while(reserve_need_cnt > 0):\n\n                        if hour_option == 'first':\n                            index_no = timeTable_filterd['index'].iloc[0]\n                        elif hour_option == 'mid':\n                            index_no = timeTable_filterd['index'].iloc[round(len(timeTable_sorted) / 2)]\n                        elif hour_option == 'last':\n                            index_no = timeTable_filterd['index'].iloc[-1]\n\n                        idx = timeTable_filterd[timeTable_filterd['index']== index_no].index\n                        timeTable_filterd = timeTable_filterd.drop(idx)\n\n                        # 골라낸 시간에 예약 버튼 누르기\n\n                        # reservation_time_list[index_no].get_attribute('onclick')\n                        # reservation_time_list[index_no].click()\n                        #\n                        # reservation_time_list[index_no].get_attribute('onclick')\n                        driver.execute_script(\"arguments[0].click();\", reservation_time_list[index_no])\n\n                        # 예약 확인 pop up\n\n                        popup_text = driver.find_element(By.XPATH,\n                                                         \"//div[@id='confirmModal']/div[@class='modal_content']/div[@class='confirm_modal']\").text\n                        print(popup_text)\n                        reserve_button = driver.find_element(By.XPATH,\n                                            \"//div[@id='confirmModal']/div[@class='modal_content']/div[@class='confirm_modal']/div[@class='form_btns']/button\")\n                        reserve_text = reserve_button.text\n                        print(reserve_text)\n                        reserve_close_button =  driver.find_element(By.XPATH, \"//div[@id='confirmModal']/div[@class='modal_content']/div[@class='confirm_modal']/div[@class='form_btns']/a\")\n\n                        if reserve_type == 'real':\n                            reserve_button.click()\n                            # 이렇게 하면 바로 예약 됨\n                            # popup_text = '[예약 완료, macro 정상 동작]\\n' +  + popup_text\n                            # kakao_message(popup_text, access_token)\n                            reserve_succees_cnt += 1\n                            reserve_need_cnt    -= 1\n                            telegram_message(content=popup_text,content_type='text', description='description')\n\n                        elif   reserve_type == 'test' and reserve_text =='예약하기':\n                            # 카카오 문자 보내기\n                            reserve_close_button.click()\n                            # access_token = access_token_mkr(REST_API_KEY, refresh_token)\n                            popup_text = '[예약 macro 정상 동작]\\n' + '[예약이 된것은 아님]\\n'+ popup_text\n                            # kakao_message(popup_text, access_token)\n                            reserve_need_cnt =0\n                            reserve_try_cnt = 0\n                            telegram_message(content=popup_text, content_type='text', description='description')\n\n                        else:\n                            print('Check reserve count')\n                        # reserve_cnt -= 1  # 예약 건수를 1개 줄임\n                        if multi_date == True:\n                            date_count -= 1\n                        elif multi_date == False:\n                            date_count = 0\n                        else:\n                            print('Check multidate option')\n\n\n                except:\n                    print('macro fail:  targetting reserve while sentence! ')\n                    # access_token = access_token_mkr(REST_API_KEY, refresh_token)\n                    # kakao_message('rivera macro fail:  targetting reserve while sentence!  \\n' + str(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))), access_token)\n                    telegram_message(content='rivera macro fail:  targetting reserve while sentence!  \\n' + str(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))),\n                                     content_type='text', description='description')\n\n            elif date_count == 0:\n                pass\n            else :\n                print('Check date_count')\n        if book_try_cnt == len(wish_date):\n            # access_token = access_token_mkr(REST_API_KEY, refresh_token)\n            # kakao_message('There is no able day to book \\n' + str( time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))), access_token)\n            telegram_message(content='There is no able day to book \\n' + str( time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))),\n                             content_type='text', description='description')\n        else:\n            print('Check book_try_cnt')\n        if reserve_try_cnt >0 :\n            reserve_try_cnt -= 1\n        else :\n            pass\n        print('book_try_cnt',book_try_cnt)\n        print('wish_date',wish_date)\n        driver.close()\n\n\n# loginfo = info_ipo\n\n# reserve_try_cnt = 9\n# reserve_able_cnt = 3\n# reserve_type='test'\n# info_date2 = info_date_ipo\ndef reserve_ipo(loginfo,info_date, reserve_try_cnt  = 9, reserve_type='test', multi_date = False):\n\n    # inforamtion of login date initial variable.\n    \"로그인에 필요한 정보\"\n    url       = loginfo['url']\n    loginpage = loginfo['loginPage']\n    loginID   = loginfo['id']\n    loginPW   = loginfo['pw']\n    \"예약을 원하는 날짜 list\"\n    wish_date   = info_date['wish_date']\n    wish_hour   = info_date['wish_hour']\n    hour_option = info_date['hour_option']\n\n    \"예약 가능한 일시를 저장하기 위함\"\n    reservable_table_columns = ['cc', 'course', 'date', 'time', 'status', 'price', 'key_date','key_time','key_course']\n    reservable_table = pd.DataFrame(data=[], columns=reservable_table_columns)\n    \"예약 가능한 일시를 저장하기 위함\"\n    reservable_time_table = pd.DataFrame()\n    \"예약 완료한 일시를 저장하기 위함, 대기 예약이 가능하므로 status는 유지함\"\n    reserve_result_table_columns = ['cc', 'course', 'date', 'time', 'status', 'price']\n    reserve_result_table = pd.DataFrame(data=[], columns=reserve_result_table_columns)\n\n\n    reserve_try_cnt     = reserve_try_cnt # 예약 오픈 일시가 web server 시각과 local pc 시각 불일치를 고려 강제 시도 횟수 지정\n    reserve_succees_cnt = 0\n    reserve_need_cnt    = len(wish_date) * len(wish_hour)\n\n\n    if reserve_type == 'real':\n        pass\n    elif reserve_type == 'test':\n        reserve_try_cnt = 1\n    else:\n        reserve_try_cnt =0\n        telegram_message(content= 'ipo_cc : ' + error_msg['reserve_type'], content_type='text', description='description')\n\n\n\n    # 2.  log in page open & log in\n    try:\n        driver = driverAct(url)\n    except Exception as e:\n        telegram_message(content=repr(e), content_type='text', description='description')\n        telegram_message(content='ipo_cc : ' + error_msg['chrome_dirver_version'], content_type='text', description='description')\n\n    try:\n        driver.get(loginpage)\n    except:\n        telegram_message(content='ipo_cc : ' + error_msg['login_url_aborted'], content_type='text', description='description')\n\n\n\n    \"ID Pasword 입력하여 login\"\n    try:\n        # id\n        userId = driver.find_element(By.ID, 'id')\n        userId.send_keys(loginID)  # 로그인 할 계정 id\n\n        # password\n        userPwd = driver.find_element(By.ID, 'password')\n        userPwd.send_keys(loginPW)\n        userPwd.send_keys(Keys.ENTER)\n    except:\n        telegram_message(content='ipo_cc : ' + error_msg['login_fail'], content_type='text',\n                         description='description')\n\n    # 리베라에 해당하는 사례임\n    # log in putton userPwd에 password를 엔터를 치면 되는데, 아래처럼 로그인 버튼을 누를수도 있다\n    # loginbtn = driver.find_element(By.XPATH, \"//form[@id='loginForm']/div[@class='login_btn']\")\n    # loginbtn.click()\n    # /html/body/div/div[1]/div[3]/div/ul/li[1]/a\n    # 통합 예약/실시간예약\n    # reservation = driver.find_element(By.XPATH,\"/html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\")  # /html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\n\n    # 3. reserveation page open\n\n    while(reserve_need_cnt > 0 and reserve_try_cnt > 0 ):\n        \"예약 화면 open\"\n        reservation_open = driver.find_element(By.XPATH, \"/html/body/div/div[1]/div[3]/div/ul/li[1]/a\")\n        driver.execute_script(\"arguments[0].click();\", reservation_open)  # 예약 화면 오픈\n\n        # # 달력 예약 / 마감/ 오프전 달력 취합, 오래 걸림\n        # driver.find_element(By.ID, \"container\")\n        #\n        #\n        # driver.find_element(By.XPATH, \"//div[@id='content']/div[@class='txtcont']/div[@class='join_form']\")\n        # driver.find_elements(By.XPATH,\"//div[@class = 'mt10 mb40 leftcont']\")\n        #\n        #\n        # calendar =  driver.find_elements(By.XPATH,\"//table[@class = 'table_cal mt15']\")\n        # timeTable = pd.DataFrame()\n        # cal_type = ['upper_month', 'lower_month']\n        # i = 0\n        # for cal in (calendar):\n        #     month_col = cal_type[i]\n        #     i +=1\n        #     # 이번달 과 다음달로 나움\n        #     print(cal)\n        #     # 달에서 주를 나눔\n        #     w_ls = cal.find_elements(By.XPATH, \"//tbody/tr\")\n        #\n        #     for w in w_ls:\n        #\n        #         d_ls = w.find_elements(By.XPATH,'td')\n        #         for d in d_ls:\n        #             try:\n        #\n        #                 class_col = d.get_attribute('name')\n        #                 id_col    = d.get_attribute('id')\n        #                 status_col = d.find_element(By.XPATH,\"div[@class='cal']\").text\n        #                 temp = [month_col, class_col, id_col, status_col]\n        #                 temp = pd.DataFrame(data=temp).T\n        #                 timeTable = timeTable.append(temp)\n        #             except:\n        #                 pass\n        # timeTable_columns = ['cal_type', 'class_col', 'id_col', 'status_col']\n        # timeTable.columns = timeTable_columns\n        # timeTable.reset_index(drop=True, inplace = True)\n\n        # 3. 달력 예약 / 마감/ 오프전 달력 취합 다른 방법, 이것이 빠름\n\n        # 예약 달력, 날짜별 예약 가능 여부 표시 되어 있음\n        \"Canledar open하여 날짜별 예약 상태 수집\"\n        driver.find_element(By.XPATH, \"//div[@id='timeform']\")\n        \"timeform 아래에 input 속성이 날짜별로 있어 list함\"\n        date_ls = driver.find_elements(By.XPATH, \"//div[@id='timeform']/input\")\n\n        for d in date_ls:\n            # d = date_ls[15]\n            try:\n\n                status = d.get_attribute('name').split('_')[3]\n                key_date = d.get_attribute('id')\n                date = key_date.split('_')[1]\n                # name_col = d.get_attribute('name')\n                ['cc', 'course', 'date', 'time', 'status', 'price', 'key_date', 'key_time', 'key_course']\n                temp_data = {'cc': ['ipo_cc'],\n                             'date': [date],\n                             'status': [status],\n                             'key_date': [key_date]}\n                # temp_1_colums = ['cc','date','status','key_date']\n                temp = pd.DataFrame(data=temp_data)\n\n                reservable_table = pd.concat([reservable_table, temp])\n            except:\n                pass\n\n        reservable_table = reservable_table[reservable_table['status'] == '예약']\n        reservable_table.reset_index(drop=True, inplace=True)\n        # reservable_table.info()\n\n        # 4. 날짜 선택 기능\n\n        driver.find_element(By.ID, \"container\")\n\n        # 달력 부분 활성화\n        driver.find_element(By.XPATH, \"//div[@id='content']/div[@class='txtcont']/div[@class='join_form']\")\n        driver.find_element(By.XPATH, \"//div[@class = 'mt10 mb40 leftcont']\")\n\n        # d = wish_date[0] # test용\n        # # bottom is exercise\n        # wish_date = '20211106'\n        # date_temp = \"//td[@id=\" + wish_date + \"]\"\n        # driver.find_element(By.XPATH, date_temp).text # example = '6\\n마감'\n        \" wishdate filtering\"\n\n        temp_table = pd.DataFrame()\n        for date_able in wish_date:\n            # date_able = wish_date[0]\n            temp_table1 = reservable_table[reservable_table['date'] == date_able]\n            temp_table = pd.concat([temp_table, temp_table1])\n        reservable_table = temp_table\n\n        \"달력에서 날짜별 선택 아래 폼으로 찾으면 wishdate를 활성화\"\n        # date_id = \"//td[@id=\" + d + \"]\"\n        reservable_table['key_date'] = \"//td[@id=\" + reservable_table['date'] + \"]\"\n\n        for key_d in reservable_table['key_date'].unique():\n            # key_d = reservable_table['key_date'].unique()[1]\n            #\n            try:\n                \" '14\\n예약' 형태로 되어 있어 split을 하여 예약 부분을 추출\"\n                status = driver.find_element(By.XPATH, key_d).text.split('\\n')[-1]\n\n                if status == '예약':\n                    driver.refresh()  # 'stale error issue solution but past history forgotton. '\n                    driver.find_element(By.XPATH, key_d).click()\n                    # 이부분에 시간 에약 기능이 들어가야 함\n\n                    driver.find_element(By.XPATH,\"//div[@class = 'mt10 mb40 rightcont join_form']\")\n\n                    # course 선택\n                    course_dict = {'out': \"//td[@valign = 'top']/table[@id = 'out_table']/tbody\",\n                                   'in' :  \"//td[@valign = 'top']/table[@id = 'in_table']/tbody\"}\n\n                    for c in list(course_dict.keys()):\n                        # c = list(course_dict.keys())[1]\n                        print(c)\n                        # driver.find_element(By.XPATH,course_dict[c]).text\n                        # 시간 list 추출\n                        # course_dict['out'] + \"/tr[@style = 'cursor:pointer']\"\n\n                        time_ls = driver.find_elements(By.XPATH,course_dict[c] + \"/tr[@style = 'cursor:pointer']\")\n                        # time_ls = WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located(By.XPATH,course_dict[c] + \"/tr[@style = 'cursor:pointer']\"))\n                        driver.implicitly_wait(1)\n                        # time.sleep(1)\n                        print('time sleep')\n                        course_timetable_columns = ['date', 'time', 'price', 'key_time', 'status', 'course']\n                        course_timetable = pd.DataFrame()\n\n\n                        for i in range(len(time_ls)):\n\n                            temp_date = key_d.split('=')[1][:8] # '//td[@id=20220214]'\n                            temp_time = time_ls[i].find_element(By.XPATH, \"th\").text\n                            temp_price = time_ls[i].find_element(By.XPATH, \"td\").text\n\n                            temp_key_time = time_ls[i]\n                            course_timetable = pd.concat(\n                                [course_timetable, pd.DataFrame([temp_date, temp_time, temp_price, temp_key_time,status, c]).T])\n\n                        print('time ls')\n                        temp_key_time.click()\n                        ['cc', 'course', 'date', 'time', 'status', 'price', 'key_date', 'key_time', 'key_course']\n                        course_timetable.columns = course_timetable_columns\n\n\n\n                        left_join_key = ['date', 'status' ]\n                        right_join_key = ['date', 'status' ]\n                        reservable_table_target = reservable_table[reservable_table['date'] == temp_date]\n                        join_table = pd.merge(reservable_table_target,course_timetable,how='left',left_on=left_join_key,right_on=right_join_key)\n                        join_table.drop(['course_x','time_x','key_time_x','price_x'],axis=1,inplace=True)\n                        join_table.rename(columns={'time_y':'time','price_y':'price','course_y':'course','key_time_y':'key_time'},inplace=True)\n                        reservable_time_table = pd.concat([reservable_time_table,join_table])\n                        # reservable_time_table['key_time'].iloc[0].click()\n                    reservable_time_table.reset_index(drop=True,inplace=True)\n\n                    \"220213 02:42 이 위까지 작업하였음\"\n                    # 4. 시간 선택 기능\n                    # 원하는 시간대 골라내기\n                    timeTable_masked = pd.DataFrame()\n                    for h in wish_hour:\n                        try:\n                            if reserve_try_cnt >0 :\n\n                                # h = wish_hour[0]\n                                first_time = h.split('~')[0]\n                                end_time = h.split('~')[1]\n                                mask1 = (reservable_time_table['time'].str[0:2] >= first_time) & (\n                                        reservable_time_table['time'].str[0:2] < end_time)  # 시간대 filter\n\n                                timeTable_sorted = reservable_time_table.loc[mask1, :].sort_values('time')\n                                timeTable_masked = pd.concat([timeTable_masked, timeTable_sorted])\n                                timeTable_masked.reset_index(drop=True, inplace=True)\n                                # 시간 option에 의해 선택지에서 하나 선택\n                                if hour_option == 'first':\n                                    index_no = 0\n                                elif hour_option == 'mid':\n                                    index_no = round(len(timeTable_masked) / 2)\n                                elif hour_option == 'last':\n                                    index_no = -1\n                                # 선택한 시간 옵션으로 하나 고름\n                                timeTable_masked.iloc[index_no]['key_time'].click()\n                                # 예약 확인\n                                reserve_message = driver.find_element(By.XPATH, \"//div[@name = 'result' and @id='result']\").text\n                                if reserve_type == 'real':\n                                    reserve_confirm = driver.find_element(By.XPATH,\n                                                                          \"//form[@name = 'sub04_2' and @id='sub04_2']/div[@class = 'mt20 mb50 btnarea4']/span[@class='btn_enter mr20']\")\n                                    reserve_confirm.click()\n                                    telegram_message('예약 완료:\\n' + timeTable_masked.iloc[index_no]['cc'] + '\\n' + reserve_message)\n\n                                    reserve_need_cnt -= 1\n                                    reserve_try_cnt -= 1\n\n                                elif reserve_type == 'test':\n\n                                    telegram_message(\n                                        '예약 Test:실제로 예약된 것은 아님\\n' + timeTable_masked.iloc[index_no]['cc'] + '\\n' + reserve_message)\n                                    reserve_cancel = driver.find_element(By.XPATH,\n                                                                          \"//form[@name = 'sub04_2' and @id='sub04_2']/div[@class = 'mt20 mb50 btnarea4']/span[@class='btn_cancel']\")\n\n                                    reserve_try_cnt = 0\n                                else:\n                                    continue\n                        except:\n                            pass\n\n\n                #\n                # elif status == '마감' or status =='오픈전':\n                #     reserve_result.append([d,status])\n                # else:\n                #     reserve_result.append([d, 'error'])\n            except:\n                print('error')\n                reserve_try_cnt -=1\n        driver.close()\n\n        \"220215 01:14 이 위까지 작업하였음\"\n\n\n\n\n\n        #여기까지 작성 2/15 12:09\n\n        # 아래 블럭 처리한 내용은 element에서 click을 하고 시행되지 않으면 execute_script를 쓰라는 문구인데 시간을 아끼기 위해 바로 excecute_sript를 사용하였다.\n        #  \"\"\"   try:\n        #         print(\"Element is visible? \" + str(reservation_open.is_displayed()))  # elemnet visible check\n        #         reservation_open.click()\n        #         # 에러메시지가 아래와 같이 나오면 엘리먼트가 보이지 않은것이다.\n        #         # \" selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable   (Session info: chrome=94.0.4606.61) \"\n        #\n        #         print(\"Element is visible? \" + str(reservation_open.is_displayed())) # elemnet visible check\n        #         except:\n        #\n        #              # 그러면 아래와 같이 명령을 쓰면 해결이 된다.\n        #             driver.execute_script(\"arguments[0].click();\",reservation_open)\n        # \"\"\"\n\n\n        # driver.close()\n        # 실시간 예약\n\n        \"\"\" <div id='container'>\n               <div id='content'>\n                   <div class ='board_info_wrap'>\n                      <div class = 'inner'>\n                          < div class = 'page_tap_wrap'>  # 신안 계열 골프장 리스트\n                          < div class = 'month_wrap'> #달력\n                           < button type ='button' class= 'prev'> 지난달 버튼\n                           < span class ='year'>   올해 년도\n                           < span class = 'month'> 이번 달\n                           < button type = 'button' class 'next'> 다음달 버튼\n                           < div class = 'reservation_table calender_table> 예약 날짜 목록\n                             <table>\n                              <tbody> 이아래에 날짜별로 목록이 존재\n                               <tr> tr이 주간 묶음이고 하위에 <td>가 날짜를 뜻한다\n                                <td> 공란이면 해당 월에 날이 없는것을 말함(예약 가능일이 아니고 달력 기준 날짜)\n                                  < div class ='day'>1 </div>  날짜\n                                  < div class ='white'> 이면 예약 가능한 날이 없다는 것이다\n                                  or \n                                  <div class ='day'>12 </div> 예약이 가능한 경우는\n                                  <a class='open' id='20211012'> 1팀/<a>  날짜와 예약 가능 팀수를 알수 있다. 클릭하면 상세 날짜가 나온다 \n                            <div id ='reservationSelect'> 예약 상세 page 위에 날짜를 선택해야 상세 page가 열림\n                              <div class ='date_wrap' > 해당 날짜\n                                < div class = 'reservation_table time_table>\n                                   <table>\n                                     <thread> \n                                        <tr> 예약 상세화면의 컬럼 정보, [코스, 시간, 그린피, 예약]\n                                     <tbody> \n                                         <tr> 예약 상세정보 이게 중요한 예약 가능 정보임, \n                                            <th rowspan =2> LAKES </th>  코스 정보 및 해당 코스(LAKES) 에 몇개 예약(rowspn)이 가능한지 숫자 나옴\n                                            <td> 18:52 </td> 시간\n                                            <td> 130,000 </td> 금액\n                                            <td> \n                                               <button conclick> 예약 선택 버튼 \"\"\"\n\n\"resrve_ipo2는 실패\"\ndef reserve_ipo2(loginfo,info_date2, reserve_try_cnt  = 9,reserve_able_cnt = 3, reserve_type='test', multi_date = False):\n\n    # inforamtion of login date initial variable.\n    \"로그인에 필요한 정보\"\n    url       = loginfo['url']\n    loginpage = loginfo['loginPage']\n    loginID   = loginfo['id']\n    loginPW   = loginfo['pw']\n    \"예약을 원하는 날짜 list\"\n    info_date2.keys()\n    wish_date = []\n    wish_date = [info_date2[k][0] for k in list(info_date2.keys()) ]\n    # wish_date   = info_date['wish_date']\n    # wish_hour = []\n    # wish_hour = [info_date2[k][1] for k in list(info_date2.keys()) ]\n    # wish_hour   = info_date['wish_hour']\n    # hour_option =[]\n    # hour_option = [info_date2[k][2] for k in list(info_date2.keys()) ]\n    # hour_option = info_date['hour_option']\n\n    \"예약 가능한 일시를 저장하기 위함\"\n    reservable_table_columns = ['cc', 'course', 'date', 'time', 'status', 'price', 'key_date','key_time','key_course']\n    reservable_table = pd.DataFrame(data=[], columns=reservable_table_columns)\n    \"예약 가능한 일시를 저장하기 위함\"\n\n    reserve_result_table_columns = ['cc', 'course', 'date', 'time', 'status', 'price']\n    reserve_result_table = pd.DataFrame(data=[], columns=reserve_result_table_columns)\n\n\n    reserve_try_cnt     = reserve_try_cnt # 예약 오픈 일시가 web server 시각과 local pc 시각 불일치를 고려 강제 시도 횟수 지정\n    reserve_succees_cnt = 0\n    reserve_need_cnt    = len(info_date2)\n\n\n    if reserve_type == 'real':\n        pass\n    elif reserve_type == 'test':\n        reserve_try_cnt = 1\n        reserve_able_cnt =1\n    else:\n        reserve_try_cnt =0\n        telegram_message(content= 'ipo_cc : ' + error_msg['reserve_type'], content_type='text', description='description')\n\n\n\n    # 2.  log in page open & log in\n    try:\n        driver = driverAct(url)\n    except Exception as e:\n        telegram_message(content=repr(e), content_type='text', description='description')\n        telegram_message(content='ipo_cc : ' + error_msg['chrome_dirver_version'], content_type='text', description='description')\n\n    try:\n        driver.get(loginpage)\n    except:\n        telegram_message(content='ipo_cc : ' + error_msg['login_url_aborted'], content_type='text', description='description')\n\n\n\n    \"ID Pasword 입력하여 login\"\n    try:\n        # id\n        userId = driver.find_element(By.ID, 'id')\n        userId.send_keys(loginID)  # 로그인 할 계정 id\n\n        # password\n        userPwd = driver.find_element(By.ID, 'password')\n        userPwd.send_keys(loginPW)\n        userPwd.send_keys(Keys.ENTER)\n    except:\n        telegram_message(content='ipo_cc : ' + error_msg['login_fail'], content_type='text',\n                         description='description')\n\n    # 리베라에 해당하는 사례임\n    # log in putton userPwd에 password를 엔터를 치면 되는데, 아래처럼 로그인 버튼을 누를수도 있다\n    # loginbtn = driver.find_element(By.XPATH, \"//form[@id='loginForm']/div[@class='login_btn']\")\n    # loginbtn.click()\n    # /html/body/div/div[1]/div[3]/div/ul/li[1]/a\n    # 통합 예약/실시간예약\n    # reservation = driver.find_element(By.XPATH,\"/html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\")  # /html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\n\n    # 3. reserveation page open\n\n    while(reserve_need_cnt > 0 and reserve_try_cnt > 0 and reserve_able_cnt > 0 ):\n        \"예약 화면 open\"\n        reservation_open = driver.find_element(By.XPATH, \"/html/body/div/div[1]/div[3]/div/ul/li[1]/a\")\n        driver.execute_script(\"arguments[0].click();\", reservation_open)   # 예약 화면 오픈\n\n        # # 달력 예약 / 마감/ 오프전 달력 취합, 오래 걸림\n        # driver.find_element(By.ID, \"container\")\n        #\n        #\n        # driver.find_element(By.XPATH, \"//div[@id='content']/div[@class='txtcont']/div[@class='join_form']\")\n        # driver.find_elements(By.XPATH,\"//div[@class = 'mt10 mb40 leftcont']\")\n        #\n        #\n        # calendar =  driver.find_elements(By.XPATH,\"//table[@class = 'table_cal mt15']\")\n        # timeTable = pd.DataFrame()\n        # cal_type = ['upper_month', 'lower_month']\n        # i = 0\n        # for cal in (calendar):\n        #     month_col = cal_type[i]\n        #     i +=1\n        #     # 이번달 과 다음달로 나움\n        #     print(cal)\n        #     # 달에서 주를 나눔\n        #     w_ls = cal.find_elements(By.XPATH, \"//tbody/tr\")\n        #\n        #     for w in w_ls:\n        #\n        #         d_ls = w.find_elements(By.XPATH,'td')\n        #         for d in d_ls:\n        #             try:\n        #\n        #                 class_col = d.get_attribute('name')\n        #                 id_col    = d.get_attribute('id')\n        #                 status_col = d.find_element(By.XPATH,\"div[@class='cal']\").text\n        #                 temp = [month_col, class_col, id_col, status_col]\n        #                 temp = pd.DataFrame(data=temp).T\n        #                 timeTable = timeTable.append(temp)\n        #             except:\n        #                 pass\n        # timeTable_columns = ['cal_type', 'class_col', 'id_col', 'status_col']\n        # timeTable.columns = timeTable_columns\n        # timeTable.reset_index(drop=True, inplace = True)\n\n        # 3. 달력 예약 / 마감/ 오프전 달력 취합 다른 방법, 이것이 빠름\n\n        # 예약 달력, 날짜별 예약 가능 여부 표시 되어 있음\n        \"Canledar open하여 날짜별 예약 상태 수집\"\n        driver.find_element(By.XPATH, \"//div[@id='timeform']\")\n        \"timeform 아래에 input 속성이 날짜별로 있어 list함\"\n        date_ls = driver.find_elements(By.XPATH, \"//div[@id='timeform']/input\")\n\n\n        for d in date_ls:\n            # d = date_ls[15]\n            try:\n\n                status = d.get_attribute('name').split('_')[3]\n                key_date = d.get_attribute('id')\n                date      = key_date.split('_')[1]\n                # name_col = d.get_attribute('name')\n                ['cc', 'course', 'date', 'time', 'status', 'price', 'key_date', 'key_time', 'key_course']\n                temp_data = {'cc':['ipo_cc'],\n                          'date':[date],\n                          'status':[status],\n                          'key_date':[ key_date]}\n                # temp_1_colums = ['cc','date','status','key_date']\n                temp = pd.DataFrame(data=temp_data)\n\n                reservable_table = pd.concat([reservable_table,temp])\n            except:\n                pass\n\n        reservable_table = reservable_table[reservable_table['status'] == '예약']\n        reservable_table.reset_index(drop=True,inplace=True)\n        # reservable_table.info()\n\n        # 4. 날짜 선택 기능\n\n        driver.find_element(By.ID, \"container\")\n\n        # 달력 부분 활성화\n        driver.find_element(By.XPATH, \"//div[@id='content']/div[@class='txtcont']/div[@class='join_form']\")\n        driver.find_element(By.XPATH,\"//div[@class = 'mt10 mb40 leftcont']\")\n\n        # d = wish_date[0] # test용\n        # # bottom is exercise\n        # wish_date = '20211106'\n        # date_temp = \"//td[@id=\" + wish_date + \"]\"\n        # driver.find_element(By.XPATH, date_temp).text # example = '6\\n마감'\n        \" wishdate filtering\"\n\n        temp_table = pd.DataFrame()\n        info_date_temp = {}\n        for date_able in wish_date:\n            # date_able = wish_date[0]\n            temp_table1 = reservable_table[reservable_table['date'] == date_able]\n            temp_table = pd.concat([temp_table,temp_table1])\n        for kd in list(info_date2.keys()):\n            if info_date2[kd][0] in temp_table['date'].unique():\n                info_date_temp[kd] = info_date2[kd]\n\n        reservable_table = temp_table\n\n        \"달력에서 날짜별 선택 아래 폼으로 찾으면 wishdate를 활성화\"\n        # date_id = \"//td[@id=\" + d + \"]\"\n        reservable_table['key_date'] = \"//td[@id=\" + reservable_table['date'] + \"]\"\n        '여기서 날짜를 infro date dic에서 가져와서 순서대로 진행해야 함 2/27 01:00'\n\n\n\n        for kd in list(info_date_temp.keys()):\n            reservable_time_table = pd.DataFrame()\n            \"예약 완료한 일시를 저장하기 위함, 대기 예약이 가능하므로 status는 유지함\"\n            kd = list(info_date_temp.keys())[0]\n            if reserve_able_cnt > 0:\n                if info_date_temp[kd][0] in reservable_table['date'].unique():\n                    key_d = \"//td[@id=\" + info_date_temp[kd][0] + \"]\"\n                    try:\n                        \" '14\\n예약' 형태로 되어 있어 split을 하여 예약 부분을 추출\"\n                        status = driver.find_element(By.XPATH, key_d).text.split('\\n')[-1]\n\n                        if status == '예약':\n                            driver.refresh()  # 'stale error issue solution but past history forgotton. '\n                            driver.find_element(By.XPATH, key_d).click()\n                            # 이부분에 시간 에약 기능이 들어가야 함\n\n                            driver.find_element(By.XPATH,\"//div[@class = 'mt10 mb40 rightcont join_form']\")\n\n                            # course 선택\n                            course_dict = {'out': \"//td[@valign = 'top']/table[@id = 'out_table']/tbody\",\n                                           'in' :  \"//td[@valign = 'top']/table[@id = 'in_table']/tbody\"}\n                            course_timetable_columns = ['date', 'time', 'price', 'key_time', 'status', 'course']\n                            course_timetable = pd.DataFrame()\n                            for c in list(course_dict.keys()):\n                                c = list(course_dict.keys())[0]\n                                print(c)\n                                # driver.find_element(By.XPATH,course_dict[c]).text\n                                # 시간 list 추출\n                                # course_dict['out'] + \"/tr[@style = 'cursor:pointer']\"\n\n                                time_ls = driver.find_elements(By.XPATH,course_dict[c] + \"/tr[@style = 'cursor:pointer']\")\n                                # time_ls = WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located(By.XPATH,course_dict[c] + \"/tr[@style = 'cursor:pointer']\"))\n                                driver.implicitly_wait(1)\n                                # time.sleep(1)\n                                print('time sleep')\n\n\n\n                                for i in range(len(time_ls)):\n                                    # i = 1\n                                    temp_date = key_d.split('=')[1][:8] # '//td[@id=20220214]'\n                                    temp_time = time_ls[i].find_element(By.XPATH, \"th\").text\n                                    temp_price = time_ls[i].find_element(By.XPATH, \"td\").text\n\n                                    temp_key_time = time_ls[i]\n                                    course_timetable = pd.concat(\n                                        [course_timetable, pd.DataFrame([temp_date, temp_time, temp_price, temp_key_time,status, c]).T])\n\n                                    print('time ls')\n                                    # temp_key_time.click()\n                                    ['cc', 'course', 'date', 'time', 'status', 'price', 'key_date', 'key_time', 'key_course']\n                                    course_timetable.columns = course_timetable_columns\n\n\n\n                                    left_join_key = ['date', 'status' ]\n                                    right_join_key = ['date', 'status' ]\n                                    reservable_table_target = reservable_table[reservable_table['date'] == temp_date]\n                                    join_table = pd.merge(reservable_table_target,course_timetable,how='left',left_on=left_join_key,right_on=right_join_key)\n                                    join_table.drop(['course_x','time_x','key_time_x','price_x'],axis=1,inplace=True)\n                                    join_table.rename(columns={'time_y':'time','price_y':'price','course_y':'course','key_time_y':'key_time'},inplace=True)\n                                    reservable_time_table = pd.concat([reservable_time_table,join_table])\n                                    # reservable_time_table['key_time'].iloc[0].click()\n                                    reservable_time_table.reset_index(drop=True,inplace=True)\n\n                                \"220213 02:42 이 위까지 작업하였음\"\n                                # 4. 시간 선택 기능\n                                # 원하는 시간대 골라내기\n                                wish_hour = info_date_temp[kd][1]\n                                hour_option = info_date_temp[kd][2]\n\n\n\n                            # timeTable_masked = pd.DataFrame()\n\n                            try:\n                                first_time = wish_hour.split('~')[0]\n                                end_time = wish_hour.split('~')[1]\n                                mask1 = (reservable_time_table['time'].str[0:2] >= first_time) & (\n                                        reservable_time_table['time'].str[0:2] < end_time)  # 시간대 filter\n\n                                timeTable_sorted = reservable_time_table.loc[mask1, :].sort_values('time')\n                                # timeTable_masked = pd.concat([timeTable_masked, timeTable_sorted])\n                                timeTable_masked = timeTable_sorted\n                                timeTable_masked.reset_index(drop=True, inplace=True)\n                                # 시간 option에 의해 선택지에서 하나 선택\n                                if hour_option == 'first':\n                                    index_no = 0\n                                elif hour_option == 'mid':\n                                    index_no = round(len(timeTable_masked) / 2)\n                                elif hour_option == 'last':\n                                    index_no = -1\n                                # 선택한 시간 옵션으로 하나 고름\n                                timeTable_masked.iloc[index_no]['key_time'].click()\n                                # 예약 확인\n                                reserve_price = timeTable_masked.iloc[index_no]['price']\n                                reserve_message = driver.find_element(By.XPATH, \"//div[@name = 'result' and @id='result']\").text + ' Price:' + reserve_price\n\n\n                                if reserve_type == 'real':\n                                    reserve_confirm = driver.find_element(By.XPATH,\n                                                                          \"//form[@name = 'sub04_2' and @id='sub04_2']/div[@class = 'mt20 mb50 btnarea4']/span[@class='btn_enter mr20']\")\n                                    reserve_confirm.click()\n                                    telegram_message('예약 완료:\\n' + timeTable_masked.iloc[index_no]['cc'] + '\\n' + reserve_message)\n\n                                    reserve_need_cnt -= 1\n                                    reserve_able_cnt -= 1\n\n                                elif reserve_type == 'test':\n\n                                    telegram_message(\n                                        '예약 Test:실제로 예약된 것은 아님\\n' + timeTable_masked.iloc[index_no]['cc'] + '\\n' + reserve_message)\n                                    reserve_cancel = driver.find_element(By.XPATH,\n                                                                          \"//form[@name = 'sub04_2' and @id='sub04_2']/div[@class = 'mt20 mb50 btnarea4']/span[@class='btn_cancel']\")\n\n                                    reserve_try_cnt = 0\n                                    reserve_able_cnt = 0\n                            except:\n                                pass\n                    except:\n                        pass\n\n                else:\n                    pass\n            else:\n                continue\n\n        reserve_try_cnt -= 1\n\n                            #\n                            # elif status == '마감' or status =='오픈전':\n                            #     reserve_result.append([d,status])\n                            # else:\n                            #     reserve_result.append([d, 'error'])\n\n    driver.close()\n\n    \"220215 01:14 이 위까지 작업하였음\"\n\n\n\n\n\n    #여기까지 작성 2/15 12:09\n\n    # 아래 블럭 처리한 내용은 element에서 click을 하고 시행되지 않으면 execute_script를 쓰라는 문구인데 시간을 아끼기 위해 바로 excecute_sript를 사용하였다.\n    #  \"\"\"   try:\n    #         print(\"Element is visible? \" + str(reservation_open.is_displayed()))  # elemnet visible check\n    #         reservation_open.click()\n    #         # 에러메시지가 아래와 같이 나오면 엘리먼트가 보이지 않은것이다.\n    #         # \" selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable   (Session info: chrome=94.0.4606.61) \"\n    #\n    #         print(\"Element is visible? \" + str(reservation_open.is_displayed())) # elemnet visible check\n    #         except:\n    #\n    #              # 그러면 아래와 같이 명령을 쓰면 해결이 된다.\n    #             driver.execute_script(\"arguments[0].click();\",reservation_open)\n    # \"\"\"\n\n\n    # driver.close()\n    # 실시간 예약\n\n    \"\"\" <div id='container'>\n           <div id='content'>\n               <div class ='board_info_wrap'>\n                  <div class = 'inner'>\n                      < div class = 'page_tap_wrap'>  # 신안 계열 골프장 리스트\n                      < div class = 'month_wrap'> #달력\n                       < button type ='button' class= 'prev'> 지난달 버튼\n                       < span class ='year'>   올해 년도\n                       < span class = 'month'> 이번 달\n                       < button type = 'button' class 'next'> 다음달 버튼\n                       < div class = 'reservation_table calender_table> 예약 날짜 목록\n                         <table>\n                          <tbody> 이아래에 날짜별로 목록이 존재\n                           <tr> tr이 주간 묶음이고 하위에 <td>가 날짜를 뜻한다\n                            <td> 공란이면 해당 월에 날이 없는것을 말함(예약 가능일이 아니고 달력 기준 날짜)\n                              < div class ='day'>1 </div>  날짜\n                              < div class ='white'> 이면 예약 가능한 날이 없다는 것이다\n                              or \n                              <div class ='day'>12 </div> 예약이 가능한 경우는\n                              <a class='open' id='20211012'> 1팀/<a>  날짜와 예약 가능 팀수를 알수 있다. 클릭하면 상세 날짜가 나온다 \n                        <div id ='reservationSelect'> 예약 상세 page 위에 날짜를 선택해야 상세 page가 열림\n                          <div class ='date_wrap' > 해당 날짜\n                            < div class = 'reservation_table time_table>\n                               <table>\n                                 <thread> \n                                    <tr> 예약 상세화면의 컬럼 정보, [코스, 시간, 그린피, 예약]\n                                 <tbody> \n                                     <tr> 예약 상세정보 이게 중요한 예약 가능 정보임, \n                                        <th rowspan =2> LAKES </th>  코스 정보 및 해당 코스(LAKES) 에 몇개 예약(rowspn)이 가능한지 숫자 나옴\n                                        <td> 18:52 </td> 시간\n                                        <td> 130,000 </td> 금액\n                                        <td> \n                                           <button conclick> 예약 선택 버튼 \"\"\"\n\"resrve_ipo3는 성공\"\ndef reserve_ipo3(loginfo,info_date2, reserve_try_cnt  = 9,reserve_able_cnt = 3, reserve_type='test', multi_date = False):\n\n    # inforamtion of login date initial variable.\n    \"로그인에 필요한 정보\"\n    url       = loginfo['url']\n    loginpage = loginfo['loginPage']\n    loginID   = loginfo['id']\n    loginPW   = loginfo['pw']\n    \"예약을 원하는 날짜 list\"\n    info_date2.keys()\n    wish_date = []\n    wish_date = [info_date2[k][0] for k in list(info_date2.keys()) ]\n    # wish_date   = info_date['wish_date']\n    # wish_hour = []\n    # wish_hour = [info_date2[k][1] for k in list(info_date2.keys()) ]\n    # wish_hour   = info_date['wish_hour']\n    # hour_option =[]\n    # hour_option = [info_date2[k][2] for k in list(info_date2.keys()) ]\n    # hour_option = info_date['hour_option']\n\n    \"예약 가능한 일시를 저장하기 위함\"\n    reservable_table_columns = ['cc', 'course', 'date', 'time', 'status', 'price', 'key_date','key_time','key_course']\n    reservable_table = pd.DataFrame(data=[], columns=reservable_table_columns)\n    \"예약 가능한 일시를 저장하기 위함\"\n\n    reserve_result_table_columns = ['cc', 'course', 'date', 'time', 'status', 'price']\n    reserve_result_table = pd.DataFrame(data=[], columns=reserve_result_table_columns)\n\n\n    reserve_try_cnt     = reserve_try_cnt # 예약 오픈 일시가 web server 시각과 local pc 시각 불일치를 고려 강제 시도 횟수 지정\n    reserve_succees_cnt = 0\n    reserve_need_cnt    = len(info_date2)\n\n\n    if reserve_type == 'real':\n        pass\n    elif reserve_type == 'test':\n        reserve_try_cnt = 1\n        reserve_able_cnt =1\n    else:\n        reserve_try_cnt =0\n        telegram_message(content= 'ipo_cc : ' + error_msg['reserve_type'], content_type='text', description='description')\n\n\n\n    # 2.  log in page open & log in\n    try:\n        driver = driverAct(url)\n    except Exception as e:\n        telegram_message(content=repr(e), content_type='text', description='description')\n        telegram_message(content='ipo_cc : ' + error_msg['chrome_dirver_version'], content_type='text', description='description')\n\n    try:\n        driver.get(loginpage)\n    except:\n        telegram_message(content='ipo_cc : ' + error_msg['login_url_aborted'], content_type='text', description='description')\n\n\n\n    \"ID Pasword 입력하여 login\"\n    try:\n        # id\n        userId = driver.find_element(By.ID, 'id')\n        userId.send_keys(loginID)  # 로그인 할 계정 id\n\n        # password\n        userPwd = driver.find_element(By.ID, 'password')\n        userPwd.send_keys(loginPW)\n        userPwd.send_keys(Keys.ENTER)\n    except:\n        telegram_message(content='ipo_cc : ' + error_msg['login_fail'], content_type='text',\n                         description='description')\n\n    # 리베라에 해당하는 사례임\n    # log in putton userPwd에 password를 엔터를 치면 되는데, 아래처럼 로그인 버튼을 누를수도 있다\n    # loginbtn = driver.find_element(By.XPATH, \"//form[@id='loginForm']/div[@class='login_btn']\")\n    # loginbtn.click()\n    # /html/body/div/div[1]/div[3]/div/ul/li[1]/a\n    # 통합 예약/실시간예약\n    # reservation = driver.find_element(By.XPATH,\"/html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\")  # /html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\n\n    # 3. reserveation page open\n\n    while(reserve_need_cnt > 0 and reserve_try_cnt > 0 and reserve_able_cnt > 0 ):\n        \"예약 화면 open\"\n        reservation_open = driver.find_element(By.XPATH, \"/html/body/div/div[1]/div[3]/div/ul/li[1]/a\")\n        driver.execute_script(\"arguments[0].click();\", reservation_open)   # 예약 화면 오픈\n\n        # # 달력 예약 / 마감/ 오프전 달력 취합, 오래 걸림\n        # driver.find_element(By.ID, \"container\")\n        #\n        #\n        # driver.find_element(By.XPATH, \"//div[@id='content']/div[@class='txtcont']/div[@class='join_form']\")\n        # driver.find_elements(By.XPATH,\"//div[@class = 'mt10 mb40 leftcont']\")\n        #\n        #\n        # calendar =  driver.find_elements(By.XPATH,\"//table[@class = 'table_cal mt15']\")\n        # timeTable = pd.DataFrame()\n        # cal_type = ['upper_month', 'lower_month']\n        # i = 0\n        # for cal in (calendar):\n        #     month_col = cal_type[i]\n        #     i +=1\n        #     # 이번달 과 다음달로 나움\n        #     print(cal)\n        #     # 달에서 주를 나눔\n        #     w_ls = cal.find_elements(By.XPATH, \"//tbody/tr\")\n        #\n        #     for w in w_ls:\n        #\n        #         d_ls = w.find_elements(By.XPATH,'td')\n        #         for d in d_ls:\n        #             try:\n        #\n        #                 class_col = d.get_attribute('name')\n        #                 id_col    = d.get_attribute('id')\n        #                 status_col = d.find_element(By.XPATH,\"div[@class='cal']\").text\n        #                 temp = [month_col, class_col, id_col, status_col]\n        #                 temp = pd.DataFrame(data=temp).T\n        #                 timeTable = timeTable.append(temp)\n        #             except:\n        #                 pass\n        # timeTable_columns = ['cal_type', 'class_col', 'id_col', 'status_col']\n        # timeTable.columns = timeTable_columns\n        # timeTable.reset_index(drop=True, inplace = True)\n\n        # 3. 달력 예약 / 마감/ 오프전 달력 취합 다른 방법, 이것이 빠름\n\n        # 예약 달력, 날짜별 예약 가능 여부 표시 되어 있음\n        \"Canledar open하여 날짜별 예약 상태 수집\"\n        driver.find_element(By.XPATH, \"//div[@id='timeform']\")\n        \"timeform 아래에 input 속성이 날짜별로 있어 list함\"\n        date_ls = driver.find_elements(By.XPATH, \"//div[@id='timeform']/input\")\n\n\n        for d in date_ls:\n            # d = date_ls[15]\n            try:\n\n                status = d.get_attribute('name').split('_')[3]\n                key_date = d.get_attribute('id')\n                date      = key_date.split('_')[1]\n                # name_col = d.get_attribute('name')\n                ['cc', 'course', 'date', 'time', 'status', 'price', 'key_date', 'key_time', 'key_course']\n                temp_data = {'cc':['ipo_cc'],\n                          'date':[date],\n                          'status':[status],\n                          'key_date':[ key_date]}\n                # temp_1_colums = ['cc','date','status','key_date']\n                temp = pd.DataFrame(data=temp_data)\n\n                reservable_table = pd.concat([reservable_table,temp])\n            except:\n                pass\n\n        reservable_table = reservable_table[reservable_table['status'] == '예약']\n        reservable_table.reset_index(drop=True,inplace=True)\n        # reservable_table.info()\n\n        # 4. 날짜 선택 기능\n\n        driver.find_element(By.ID, \"container\")\n\n        # 달력 부분 활성화\n        driver.find_element(By.XPATH, \"//div[@id='content']/div[@class='txtcont']/div[@class='join_form']\")\n        driver.find_element(By.XPATH,\"//div[@class = 'mt10 mb40 leftcont']\")\n\n        # d = wish_date[0] # test용\n        # # bottom is exercise\n        # wish_date = '20211106'\n        # date_temp = \"//td[@id=\" + wish_date + \"]\"\n        # driver.find_element(By.XPATH, date_temp).text # example = '6\\n마감'\n        \" wishdate filtering\"\n\n        temp_table = pd.DataFrame()\n        info_date_temp = {}\n        for date_able in wish_date:\n            # date_able = wish_date[0]\n            temp_table1 = reservable_table[reservable_table['date'] == date_able]\n            temp_table = pd.concat([temp_table,temp_table1])\n        for kd in list(info_date2.keys()):\n            if info_date2[kd][0] in temp_table['date'].unique():\n                info_date_temp[kd] = info_date2[kd]\n\n        reservable_table = temp_table\n\n        \"달력에서 날짜별 선택 아래 폼으로 찾으면 wishdate를 활성화\"\n        # date_id = \"//td[@id=\" + d + \"]\"\n        reservable_table['key_date'] = \"//td[@id=\" + reservable_table['date'] + \"]\"\n        '여기서 날짜를 infro date dic에서 가져와서 순서대로 진행해야 함 2/27 01:00'\n        if len(reservable_table) == 0 :\n\n            telegram_message('예약 가능일 없음\\n' + '당신의 요청 예약일\\n' + str(info_date2))\n\n        else:\n            pass\n\n\n\n\n\n        for kd in list(info_date_temp.keys()):\n            reservable_time_table = pd.DataFrame()\n            \"예약 완료한 일시를 저장하기 위함, 대기 예약이 가능하므로 status는 유지함\"\n            # kd = list(info_date_temp.keys())[0]\n            if reserve_able_cnt > 0:\n                if info_date_temp[kd][0] in reservable_table['date'].unique():\n                    key_d = \"//td[@id=\" + info_date_temp[kd][0] + \"]\"\n                    try:\n                        \" '14\\n예약' 형태로 되어 있어 split을 하여 예약 부분을 추출\"\n                        status = driver.find_element(By.XPATH, key_d).text.split('\\n')[-1]\n\n                        if status == '예약':\n                            driver.refresh()  # 'stale error issue solution but past history forgotton. '\n                            driver.find_element(By.XPATH, key_d).click()\n                            # 이부분에 시간 에약 기능이 들어가야 함\n\n                            driver.find_element(By.XPATH,\"//div[@class = 'mt10 mb40 rightcont join_form']\")\n\n                            # course 선택\n                            course_dict = {'out': \"//td[@valign = 'top']/table[@id = 'out_table']/tbody\",\n                                           'in' :  \"//td[@valign = 'top']/table[@id = 'in_table']/tbody\"}\n\n                            for c in list(course_dict.keys()):\n                                # c = list(course_dict.keys())[0]\n                                print(c)\n                                # driver.find_element(By.XPATH,course_dict[c]).text\n                                # 시간 list 추출\n                                # course_dict['out'] + \"/tr[@style = 'cursor:pointer']\"\n\n                                time_ls = driver.find_elements(By.XPATH,course_dict[c] + \"/tr[@style = 'cursor:pointer']\")\n                                # time_ls = WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located(By.XPATH,course_dict[c] + \"/tr[@style = 'cursor:pointer']\"))\n                                driver.implicitly_wait(1)\n                                # time.sleep(1)\n                                print('time sleep')\n\n\n\n                                for i in range(len(time_ls)):\n                                    # i = 2\n                                    course_timetable_columns = ['date', 'time', 'price', 'key_time', 'status', 'course']\n                                    course_timetable = pd.DataFrame()\n                                    temp_date = key_d.split('=')[1][:8] # '//td[@id=20220214]'\n                                    temp_time = time_ls[i].find_element(By.XPATH, \"th\").text\n                                    temp_price = time_ls[i].find_element(By.XPATH, \"td\").text\n\n                                    temp_key_time = time_ls[i]\n                                    course_timetable = pd.concat(\n                                        [course_timetable, pd.DataFrame([temp_date, temp_time, temp_price, temp_key_time,status, c]).T])\n\n                                    print('time ls')\n                                    # temp_key_time.click()\n                                    ['cc', 'course', 'date', 'time', 'status', 'price', 'key_date', 'key_time', 'key_course']\n                                    course_timetable.columns = course_timetable_columns\n\n\n\n                                    left_join_key = ['date', 'status' ]\n                                    right_join_key = ['date', 'status' ]\n                                    reservable_table_target = reservable_table[reservable_table['date'] == temp_date]\n                                    join_table = pd.merge(reservable_table_target,course_timetable,how='left',left_on=left_join_key,right_on=right_join_key)\n                                    join_table.drop(['course_x','time_x','key_time_x','price_x'],axis=1,inplace=True)\n                                    join_table.rename(columns={'time_y':'time','price_y':'price','course_y':'course','key_time_y':'key_time'},inplace=True)\n\n                                    reservable_time_table = pd.concat([reservable_time_table,join_table])\n                                    # reservable_time_table['key_time'].iloc[0].click()\n                                    reservable_time_table.reset_index(drop=True,inplace=True)\n\n                                \"220213 02:42 이 위까지 작업하였음\"\n                                # 4. 시간 선택 기능\n                                # 원하는 시간대 골라내기\n                                wish_hour = info_date_temp[kd][1]\n                                hour_option = info_date_temp[kd][2]\n\n\n\n                            # timeTable_masked = pd.DataFrame()\n\n                            try:\n                                first_time = wish_hour.split('~')[0]\n                                end_time = wish_hour.split('~')[1]\n                                mask1 = (reservable_time_table['time'].str[0:2] >= first_time) & (\n                                        reservable_time_table['time'].str[0:2] < end_time)  # 시간대 filter\n\n                                timeTable_sorted = reservable_time_table.loc[mask1, :].sort_values('time')\n                                # timeTable_masked = pd.concat([timeTable_masked, timeTable_sorted])\n                                timeTable_masked = timeTable_sorted\n                                timeTable_masked.reset_index(drop=True, inplace=True)\n                                # 시간 option에 의해 선택지에서 하나 선택\n                                if hour_option == 'first':\n                                    index_no = 0\n                                elif hour_option == 'mid':\n                                    index_no = round(len(timeTable_masked) / 2)\n                                elif hour_option == 'last':\n                                    index_no = -1\n                                # 선택한 시간 옵션으로 하나 고름\n                                timeTable_masked.iloc[index_no]['key_time'].click()\n                                # 예약 확인\n                                reserve_price = timeTable_masked.iloc[index_no]['price']\n                                reserve_message = driver.find_element(By.XPATH, \"//div[@name = 'result' and @id='result']\").text + ' Price:' + reserve_price\n\n\n                                if reserve_type == 'real':\n                                    reserve_confirm = driver.find_element(By.XPATH,\n                                                                          \"//form[@name = 'sub04_2' and @id='sub04_2']/div[@class = 'mt20 mb50 btnarea4']/span[@class='btn_enter mr20']\")\n                                    reserve_confirm.click()\n                                    telegram_message('예약 완료:\\n' + timeTable_masked.iloc[index_no]['cc'] + '\\n' + reserve_message)\n\n                                    reserve_need_cnt -= 1\n                                    reserve_able_cnt -= 1\n\n                                elif reserve_type == 'test':\n\n                                    telegram_message(\n                                        '예약 Test:실제로 예약된 것은 아님\\n' + timeTable_masked.iloc[index_no]['cc'] + '\\n' + reserve_message)\n                                    reserve_cancel = driver.find_element(By.XPATH,\n                                                                          \"//form[@name = 'sub04_2' and @id='sub04_2']/div[@class = 'mt20 mb50 btnarea4']/span[@class='btn_cancel']\")\n\n                                    reserve_try_cnt = 0\n                                    reserve_able_cnt = 0\n                            except:\n                                pass\n                    except:\n                        pass\n\n                else:\n                    pass\n            else:\n                continue\n\n        reserve_try_cnt -= 1\n\n                            #\n                            # elif status == '마감' or status =='오픈전':\n                            #     reserve_result.append([d,status])\n                            # else:\n                            #     reserve_result.append([d, 'error'])\n\n    driver.close()\n\n    \"220215 01:14 이 위까지 작업하였음\"\n\n\n\n\n\n    #여기까지 작성 2/15 12:09\n\n    # 아래 블럭 처리한 내용은 element에서 click을 하고 시행되지 않으면 execute_script를 쓰라는 문구인데 시간을 아끼기 위해 바로 excecute_sript를 사용하였다.\n    #  \"\"\"   try:\n    #         print(\"Element is visible? \" + str(reservation_open.is_displayed()))  # elemnet visible check\n    #         reservation_open.click()\n    #         # 에러메시지가 아래와 같이 나오면 엘리먼트가 보이지 않은것이다.\n    #         # \" selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable   (Session info: chrome=94.0.4606.61) \"\n    #\n    #         print(\"Element is visible? \" + str(reservation_open.is_displayed())) # elemnet visible check\n    #         except:\n    #\n    #              # 그러면 아래와 같이 명령을 쓰면 해결이 된다.\n    #             driver.execute_script(\"arguments[0].click();\",reservation_open)\n    # \"\"\"\n\n\n    # driver.close()\n    # 실시간 예약\n\n    \"\"\" <div id='container'>\n           <div id='content'>\n               <div class ='board_info_wrap'>\n                  <div class = 'inner'>\n                      < div class = 'page_tap_wrap'>  # 신안 계열 골프장 리스트\n                      < div class = 'month_wrap'> #달력\n                       < button type ='button' class= 'prev'> 지난달 버튼\n                       < span class ='year'>   올해 년도\n                       < span class = 'month'> 이번 달\n                       < button type = 'button' class 'next'> 다음달 버튼\n                       < div class = 'reservation_table calender_table> 예약 날짜 목록\n                         <table>\n                          <tbody> 이아래에 날짜별로 목록이 존재\n                           <tr> tr이 주간 묶음이고 하위에 <td>가 날짜를 뜻한다\n                            <td> 공란이면 해당 월에 날이 없는것을 말함(예약 가능일이 아니고 달력 기준 날짜)\n                              < div class ='day'>1 </div>  날짜\n                              < div class ='white'> 이면 예약 가능한 날이 없다는 것이다\n                              or \n                              <div class ='day'>12 </div> 예약이 가능한 경우는\n                              <a class='open' id='20211012'> 1팀/<a>  날짜와 예약 가능 팀수를 알수 있다. 클릭하면 상세 날짜가 나온다 \n                        <div id ='reservationSelect'> 예약 상세 page 위에 날짜를 선택해야 상세 page가 열림\n                          <div class ='date_wrap' > 해당 날짜\n                            < div class = 'reservation_table time_table>\n                               <table>\n                                 <thread> \n                                    <tr> 예약 상세화면의 컬럼 정보, [코스, 시간, 그린피, 예약]\n                                 <tbody> \n                                     <tr> 예약 상세정보 이게 중요한 예약 가능 정보임, \n                                        <th rowspan =2> LAKES </th>  코스 정보 및 해당 코스(LAKES) 에 몇개 예약(rowspn)이 가능한지 숫자 나옴\n                                        <td> 18:52 </td> 시간\n                                        <td> 130,000 </td> 금액\n                                        <td> \n                                           <button conclick> 예약 선택 버튼 \"\"\"\n\ndef info_date_test():\n\n    #  wish_date 자동 생성\n    time_ls = []\n    tm = time.time()\n    for t in range(30):\n        d = tm + t * 86400\n        temp_tm = time.localtime(d)\n        string = time.strftime('%Y%m%d', temp_tm)\n        time_ls.append(string)\n\n    info_date_test = {'wish_date': time_ls,\n                      'wish_hour': ['05~23'],\n                      'hour_option': 'first'\n                      }\n    return info_date_test\ndef info_date_test2():\n\n    #  wish_date 자동 생성\n    info_date_test2 ={}\n    tm = time.time()\n    for t in range(30):\n        d = tm + t * 86400\n        temp_tm = time.localtime(d)\n        string = time.strftime('%Y%m%d', temp_tm)\n        info_date_test2[t] = [string,'05~23','first']\n\n    return info_date_test2\n# a = info_date_test()\n# time_ls =[]\n# tm = time.time()\n# for t in range(2):\n#     d = tm + t* 86400\n#     temp_tm = time.localtime(d)\n#     string = time.strftime('%Y%m%d', temp_tm)\n#     time_ls.append(string)\n# info_date_test = {'wish_date': time_ls,\n#                 'wish_hour': ['05~23'],\n#                 'hour_option': 'first'   }\n\n# info_date_test = {'wish_date': ['20211016','20211017'],\n#                  'wish_hour': ['05~23'],\n#                  'hour_option': 'first'\n#                  }\n\n\n# 날짜 계산 연습\n# tm = time.localtime(1575142526.500323)\n# string = time.strftime('%Y-%m-%d %I:%M:%S %p', tm)\n# print(string)\n# t = time.time() 오늘 날짜\n# t = time.localtime(t)\n# t1 = t + 86400*100 100일 후 연산\n# t1 = time.localtime(t1)\n# string = time.strftime('%Y%m%d', t1)\n# print(string)\n\n\nerror_msg = {'login_url_aborted    ':'Check your login url',\n             'login_fail'           :'Check your login id or password',\n             'reserve_type'         :'Check your resever type or typo',\n             'chrome_dirver_version': 'Check your chrome driver version'\n             }\n\n\ninfo_ipo = {'url'      : 'http://ipo-cc.co.kr/cmm/main/mainPage.do',\n            'loginPage': 'https://ipocc.com/uat/uia/egovLoginUsr.do',\n             'id'      : 'ohkili',\n             'pw'      : 'Ipocc!1203'\n               }\ninfo_rivera = {'url': 'https://www.shinangolf.com/',\n               'loginPage': 'https://www.shinangolf.com/member/login',\n               'id': 'ohkili',\n               'pw': 'Sin!1203'\n\n               }\n\n# 날짜 고르기\ninfo_date = {'wish_date': ['20220302', '20220303'],\n           'wish_hour': ['07~09', '18~19'],\n           'hour_option': 'first'\n           } # hour_option 'first, 'mid', 'last'\n\ninfo_date2 = {'wish_1st_datehour': ['20220224', '07~09','first'],\n              'wish_2nd_datehour': ['20220228', '08~09', 'mid'],\n              'wish_3rd_datehour': ['20220302', '07~08', 'mid'],\n              'wish_4th_datehour': ['20220303', '10~19', 'mid'],\n              'wish_5th_datehour': ['20220306', '10~19', 'mid'],\n              'wish_6th_datehour': ['20220309', '11~19', 'mid'],\n              'wish_7th_datehour': ['20220310', '13~19', 'mid'],\n              'wish_8th_datehour': ['20220307', '08~17', 'last'],\n              'wish_9th_datehour': ['20220307', '04~19', 'mid'],\n           } # hour_option 'first, 'mid', 'last'\n\n\n\ninfo_date_ipo ={'wish_1st_datehour': ['20220312', '07~09','first'],\n                'wish_2nd_datehour': ['20220312', '11~14', 'mid'],\n                'wish_3rd_datehour': ['20220312', '10~12', 'mid'],\n                'wish_4th_datehour': ['20220312', '14~19', 'mid'],\n                # 'wish_5th_datehour': ['20220306', '10~19', 'mid'],\n              # 'wish_6th_datehour': ['20220309', '11~19', 'mid'],\n              # 'wish_7th_datehour': ['20220310', '13~19', 'mid'],\n              # 'wish_8th_datehour': ['20220307', '08~17', 'last'],\n              # 'wish_9th_datehour': ['20220307', '04~19', 'mid'],\n              } # hour_option 'first, 'mid', 'last'\n\n\ngood_luck()\n\n\n# reserve_ipo(info_ipo, info_date, reserve_try_cnt=2, reserve_type='test', multi_date=False)\n# reserve_ipo3(info_ipo,info_date_ipo, reserve_try_cnt  = 9,reserve_able_cnt = 3, reserve_type='test', multi_date = False)\n# reserve_ipo3(info_ipo,info_date_test2(), reserve_try_cnt  = 9,reserve_able_cnt = 3, reserve_type='test', multi_date = False)\n# reserve_rivera_macmini(info_rivera, info_date_test(), reserve_cnt=1, reserve_type='test', multi_date=False)\n\n# reserve_rivera(info_rivera, info_date_test(), reserve_cnt=1, reserve_type='test', multi_date=False)\n\n# Every day at 12am or 00:00 time bedtime() is called.\njob1 = schedule.every().day.at(\"19:30\").do(good_luck)\njob2 = schedule.every().day.at(\"07:30\").do(good_luck)\n# str(random.randrange(9,14)).zfill(2)\njob3 = schedule.every().day.at(\"16:15\").do(lambda:  reserve_rivera_macmini(info_rivera,info_date_test(),reserve_try_cnt=1,reserve_type='test', multi_date = False) )\njob4 = schedule.every().day.at(\"17:15\").do(lambda: reserve_ipo3(info_ipo,info_date_test2(), reserve_try_cnt  = 9,reserve_able_cnt = 1, reserve_type='test', multi_date = False)  )\n\njob_real1 = schedule.every().day.at(\"09:00\").do(lambda:  reserve_ipo3(info_ipo,info_date_ipo, reserve_try_cnt  = 9,reserve_able_cnt = 1, reserve_type='real', multi_date = False) )\n\ncount = 0\nwhile True:\n    schedule.run_pending()\n    time.sleep(1)\n    count += 1\n\n    if count >0 :\n        schedule.cancel_job(job_real1)\n\n\n\n\n\n\n\n# # test  part\n# # 1. 주요 골프장 class 만들기\n# #    0) 주요 골프장 리스트 마에스트로, 리베라,소노펠리체,  리베라(10/11 완료)\n# #    1) log in id/pw , (10/11)\n# #    2) 예약 날짜 시간 선택 조건으로 날짜대, 시간 대  고를수 있어야 하고, 시간대를 고르면 가능한 시간중  몇번째를 고를지 옵션 필요 (10/11 처음 중간 끝 중 고르게 하였음)\n# #    3)각 골프장 예약 오프되는 시간대 db로 저장 및 관리 (진행 예정)\n# # 2. 알림 메세지\n# #    1) 취소 가능일 전 미리 취소 여부 알람 메세지\n# #    2) 동반자에게 미리 알리기\n# # 3. 양도 기능\n# #    1) 예약 시간 양도 관련 내가 취소 즉시 다른 사람이 예약 가능하도록 변경 기능\n# #\n#\n# info_rivera = {'url': 'https://www.shinangolf.com/',\n#                'loginPage': 'https://www.shinangolf.com/member/login',\n#                'id': 'ohkili',\n#                'pw': 'Sin!1203'\n#                }\n#\n# # 날짜 고르기\n# info_date = {'wish_date': ['20211023', '20211028'],\n#              'wish_hour': ['14~16', '18~19'],\n#              'hour_option': 'first'\n#              }\n#\n# # wish_date = ['20211015','20211021','20211028']\n# # wish_hour = ['15~19']\n# # hour_option = 'first'  # ['first, mid, last']\n# # 골프장 고르기\n# loginfo = info_rivera\n#\n# url = loginfo['url']\n# loginpage = loginfo['loginPage']\n# loginID = loginfo['id']\n# loginPW = loginfo['pw']\n#\n# driver = chromedriver_autorun()\n# # driver.close()\n# # driver.quit()\n#\n# driver.get(url)\n# driver.get(loginpage)\n#\n# # id\n# userId = driver.find_element(By.ID, 'memberId')  # /html/body/div/div[5]/div/div/div/div[2]/div/form/div[1]/div[1]/input\n# userId.send_keys(loginID)  # 로그인 할 계정 id\n#\n# # password\n# userPwd = driver.find_element(By.ID, 'key')  # /html/body/div/div[5]/div/div/div/div[2]/div/form/div[1]/div[2]/input\n# userPwd.send_keys(loginPW)\n# userPwd.send_keys(Keys.ENTER)\n#\n# # log in putton userPwd에 password를 엔터를 치면 되는데, 아래처럼 로그인 버튼을 누를수도 있다\n# # loginbtn = driver.find_element(By.XPATH, \"//form[@id='loginForm']/div[@class='login_btn']\")\n# # loginbtn.click()\n#\n# # 통합 예약/실시간예약\n# # reservation = driver.find_element(By.XPATH,\"/html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\")  # /html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\n# reservation_open = driver.find_element(By.XPATH, \"/html/body/div/div[2]/div/div[2]/div[1]/ul/li[1]/div/ul/li[1]/a\")\n# driver.execute_script(\"arguments[0].click();\", reservation_open)\n# # 아래 블럭 처리한 내용은 element에서 click을 하고 시행되지 않으면 execute_script를 쓰라는 문구인데 시간을 아끼기 위해 바로 excecute_sript를 사용하였다.\n# #  \"\"\"   try:\n# #         print(\"Element is visible? \" + str(reservation_open.is_displayed()))  # elemnet visible check\n# #         reservation_open.click()\n# #         # 에러메시지가 아래와 같이 나오면 엘리먼트가 보이지 않은것이다.\n# #         # \" selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable   (Session info: chrome=94.0.4606.61) \"\n# #\n# #         print(\"Element is visible? \" + str(reservation_open.is_displayed())) # elemnet visible check\n# #         except:\n# #\n# #              # 그러면 아래와 같이 명령을 쓰면 해결이 된다.\n# #             driver.execute_script(\"arguments[0].click();\",reservation_open)\n# # \"\"\"\n#\n#\n# # driver.close()\n# # 실시간 예약\n#\n# \"\"\" <div id='container'>\n#        <div id='content'>\n#            <div class ='board_info_wrap'>\n#               <div class = 'inner'>\n#                   < div class = 'page_tap_wrap'>  # 신안 계열 골프장 리스트\n#                   < div class = 'month_wrap'> #달력\n#                    < button type ='button' class= 'prev'> 지난달 버튼\n#                    < span class ='year'>   올해 년도\n#                    < span class = 'month'> 이번 달\n#                    < button type = 'button' class 'next'> 다음달 버튼\n#                    < div class = 'reservation_table calender_table> 예약 날짜 목록\n#                      <table>\n#                       <tbody> 이아래에 날짜별로 목록이 존재\n#                        <tr> tr이 주간 묶음이고 하위에 <td>가 날짜를 뜻한다\n#                         <td> 공란이면 해당 월에 날이 없는것을 말함(예약 가능일이 아니고 달력 기준 날짜)\n#                           < div class ='day'>1 </div>  날짜\n#                           < div class ='white'> 이면 예약 가능한 날이 없다는 것이다\n#                           or\n#                           <div class ='day'>12 </div> 예약이 가능한 경우는\n#                           <a class='open' id='20211012'> 1팀/<a>  날짜와 예약 가능 팀수를 알수 있다. 클릭하면 상세 날짜가 나온다\n#                     <div id ='reservationSelect'> 예약 상세 page 위에 날짜를 선택해야 상세 page가 열림\n#                       <div class ='date_wrap' > 해당 날짜\n#                         < div class = 'reservation_table time_table>\n#                            <table>\n#                              <thread>\n#                                 <tr> 예약 상세화면의 컬럼 정보, [코스, 시간, 그린피, 예약]\n#                              <tbody>\n#                                  <tr> 예약 상세정보 이게 중요한 예약 가능 정보임,\n#                                     <th rowspan =2> LAKES </th>  코스 정보 및 해당 코스(LAKES) 에 몇개 예약(rowspn)이 가능한지 숫자 나옴\n#                                     <td> 18:52 </td> 시간\n#                                     <td> 130,000 </td> 금액\n#                                     <td>\n#                                        <button conclick> 예약 선택 버튼 \"\"\"\n#\n# for d in wish_date:\n#     d = wish_date[2]\n#     wish_year = d[:4]\n#     wish_month = d[4:6]\n#     wish_day = d[6:8]\n#     try:\n#\n#         calendar = driver.find_element(By.XPATH, \"//div[@class='reservation_table calendar_table']/table/tbody\")\n#         date_selected = \"//tr/td/a[@class='open'  and @id =\" + \"'\" + d + \"']\"\n#         # temp_date = calendar.find_element(By.XPATH, \"//tr/td/a[@class='open'  and @id ='20211028']\")\n#         # calendar.find_element(By.XPATH, date_selected).text 에 예약이 가능하면 팀수가 나옴 없으면 예약 불가능하므로 예약 시도 cancel\n#         if calendar.find_element(By.XPATH, date_selected).text.find('팀') >= 0:\n#             calendar.find_element(By.XPATH, date_selected).click()  # 원하는 날짜에 해당하는 달력 check\n#             # calendar.find_element(By.XPATH, date_selected).text\n#\n#             reservation_time = driver.find_element(By.XPATH, \"//div[@class = 'reservation_table time_table']\")\n#             reservation_time_list = reservation_time.find_elements(By.XPATH, \"//table/tbody/tr/td/button\")\n#\n#             # s = reservation_time_list[0].get_attribute('onclick')\n#             # s = s.replace('showConfirm','').replace('(','').replace(')','').replace(\"'\",'').split(',')\n#\n#             # time table을 list로 만들자\n#             timeTable = pd.DataFrame()\n#             timeTable_columns = ['fulldate', 'day', 'hour', 'course_type', 'cousrse_name', 'price', 'unknown1',\n#                                  'unknown2', 'unknown3']\n#\n#             for i in range(len(reservation_time_list)):\n#                 s = reservation_time_list[i].get_attribute('onclick')\n#                 s = s.replace('showConfirm', '').replace('(', '').replace(')', '').replace(\"'\", '').split(',')\n#                 s = pd.DataFrame(data=[s])\n#                 timeTable = timeTable.append(s)\n#                 print(i, s)\n#\n#             timeTable.columns = timeTable_columns\n#             timeTable.reset_index(drop=True, inplace=True)\n#\n#             # 원하는 시간대 골라내기\n#             first_time = wish_hour[0].split('~')[0]\n#             end_time = wish_hour[0].split('~')[1]\n#             mask1 = (timeTable['hour'].str[0:2] >= first_time) & (timeTable['hour'].str[0:2] < end_time)  # 시간대 filter\n#             timeTable_filterd = timeTable.loc[mask1, :]\n#\n#             timeTable_sorted = timeTable_filterd.sort_values('hour')\n#             timeTable_sorted.reset_index(inplace=True)\n#\n#             if hour_option == 'first':\n#                 index_no = timeTable_sorted['index'].iloc[0]\n#             elif hour_option == 'mid':\n#                 index_no = timeTable_sorted['index'].iloc[round(len(timeTable_sorted) / 2)]\n#             elif hour_option == 'last':\n#                 index_no = timeTable_sorted['index'].iloc[-1]\n#\n#             # 골라낸 시간에 예약 버튼 누르기\n#\n#             # reservation_time_list[index_no].get_attribute('onclick')\n#             # reservation_time_list[index_no].click()\n#             #\n#             # reservation_time_list[index_no].get_attribute('onclick')\n#             driver.execute_script(\"arguments[0].click();\", reservation_time_list[index_no])\n#\n#             # 예약 확인 pop up\n#             # reserve_text = driver.find_element(By.XPATH,\n#             #                     \"//div[@id='confirmModal']/div[@class='modal_content']/div[@class='confirm_modal']/div[@class='form_btns']/button\").text\n#             # print(reserve_text)\n#             driver.find_element(By.XPATH,\n#                                 \"//div[@id='confirmModal']/div[@class='modal_content']/div[@class='confirm_modal']/div[@class='form_btns']/button\").click()\n#             # 이렇게 하면 바로 예약 됨\n#\n#         elif calendar.find_element(By.XPATH, date_selected).text.find('팀') == -1:  # 예약일이 없으면 바로 빠져 나와서 처리 속도를 높여줌\n#             print('There is no book', d)\n#             break\n#         else:\n#             print('Check your input condition!')\n#     except:\n#         print('There is no book', d)\n#\n# driver.close()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/reservation_golf_for_macmini.py b/reservation_golf_for_macmini.py
--- a/reservation_golf_for_macmini.py	(revision 5d8c7b3ddf52da983ace1bda02ebcb59ba198070)
+++ b/reservation_golf_for_macmini.py	(date 1645972146865)
@@ -1581,6 +1581,7 @@
                                         <td> 
                                            <button conclick> 예약 선택 버튼 """
 "resrve_ipo3는 성공"
+loginfo = info_ipo
 def reserve_ipo3(loginfo,info_date2, reserve_try_cnt  = 9,reserve_able_cnt = 3, reserve_type='test', multi_date = False):
 
     # inforamtion of login date initial variable.
@@ -2094,7 +2095,7 @@
 
 # reserve_ipo(info_ipo, info_date, reserve_try_cnt=2, reserve_type='test', multi_date=False)
 # reserve_ipo3(info_ipo,info_date_ipo, reserve_try_cnt  = 9,reserve_able_cnt = 3, reserve_type='test', multi_date = False)
-# reserve_ipo3(info_ipo,info_date_test2(), reserve_try_cnt  = 9,reserve_able_cnt = 3, reserve_type='test', multi_date = False)
+reserve_ipo3(info_ipo,info_date_test2(), reserve_try_cnt  = 9,reserve_able_cnt = 3, reserve_type='test', multi_date = False)
 # reserve_rivera_macmini(info_rivera, info_date_test(), reserve_cnt=1, reserve_type='test', multi_date=False)
 
 # reserve_rivera(info_rivera, info_date_test(), reserve_cnt=1, reserve_type='test', multi_date=False)
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"d6db7a6a-0e4d-4897-80d8-17603bb375bf\" name=\"Default Changelist\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/reservation_golf_for_macmini.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/reservation_golf_for_macmini.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/sched.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/sched.py\" afterDir=\"false\" />\n    </list>\n    <ignored path=\"E:\\python\\.idea\\shelf/\" />\n    <ignored path=\"20211117_010932.jpg\" />\n    <ignored path=\"20211117_015751.jpg\" />\n    <ignored path=\"98/chromedriver.exe\" />\n    <ignored path=\"95/chromedriver.exe\" />\n    <ignored path=\"94/chromedriver.exe\" />\n    <ignored path=\"ipo_main.html\" />\n    <ignored path=\"ipo_reserve_sub04_2.html\" />\n    <ignored path=\"obo-t17800628-33.html\" />\n    <ignored path=\"webpage.html\" />\n    <ignored path=\"주행기록.jpg\" />\n    <option name=\"EXCLUDED_CONVERTED_TO_IGNORED\" value=\"true\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileEditorManager\">\n    <leaf SIDE_TABS_SIZE_LIMIT_KEY=\"300\">\n      <file pinned=\"false\" current-in-tab=\"true\">\n        <entry file=\"file://$PROJECT_DIR$/reservation_golf_for_macmini.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"423\">\n              <caret line=\"2103\" column=\"54\" lean-forward=\"true\" selection-start-line=\"2103\" selection-start-column=\"54\" selection-end-line=\"2103\" selection-end-column=\"54\" />\n              <folding>\n                <element signature=\"e#946#1297#0\" />\n                <element signature=\"e#1137#1247#0\" />\n                <element signature=\"e#1323#2701#0\" />\n                <element signature=\"e#1477#1786#0\" />\n                <element signature=\"e#1875#2041#0\" />\n                <element signature=\"e#2128#2494#0\" />\n                <element signature=\"e#2128#2267#0\" />\n                <element signature=\"e#2513#2610#0\" />\n                <element signature=\"e#2870#3008#0\" />\n                <element signature=\"e#3291#3629#0\" />\n                <element signature=\"e#3347#3467#0\" />\n                <element signature=\"e#3674#4516#0\" />\n                <element signature=\"e#3739#3838#0\" />\n                <element signature=\"e#3867#3919#0\" />\n                <element signature=\"e#3932#4257#0\" />\n                <element signature=\"e#3972#4250#0\" />\n                <element signature=\"e#4097#4209#0\" />\n                <element signature=\"e#4615#6528#0\" />\n                <element signature=\"e#4802#5574#1\" />\n                <element signature=\"e#5615#5705#0\" />\n                <element signature=\"e#5749#5884#0\" />\n                <element signature=\"e#5929#6060#0\" />\n                <element signature=\"e#6107#6436#0\" />\n                <element signature=\"e#6107#6150#0\" />\n                <element signature=\"e#6559#6874#0\" />\n                <element signature=\"e#6898#7215#0\" />\n                <element signature=\"e#7313#22794#0\" />\n                <element signature=\"e#7313#7367#0\" />\n                <element signature=\"e#8025#8078#0\" />\n                <element signature=\"e#8638#8705#0\" />\n                <element signature=\"e#9228#9334#0\" />\n                <element signature=\"e#10024#12029#1\" />\n                <element signature=\"e#12096#22188#0\" />\n                <element signature=\"e#12128#22086#0\" />\n                <element signature=\"e#12149#14075#0\" />\n                <element signature=\"e#12573#14026#0\" />\n                <element signature=\"e#13356#14026#0\" />\n                <element signature=\"e#13529#13679#0\" />\n                <element signature=\"e#14113#14638#0\" />\n                <element signature=\"e#14169#14231#0\" />\n                <element signature=\"e#14673#21526#0\" />\n                <element signature=\"e#14812#14901#0\" />\n                <element signature=\"e#15024#15113#0\" />\n                <element signature=\"e#15156#15212#0\" />\n                <element signature=\"e#15416#15510#0\" />\n                <element signature=\"e#16323#16379#0\" />\n                <element signature=\"e#16837#16892#0\" />\n                <element signature=\"e#17122#17262#0\" />\n                <element signature=\"e#17344#17643#0\" />\n                <element signature=\"e#17901#18309#0\" />\n                <element signature=\"e#18432#21526#0\" />\n                <element signature=\"e#18976#18995#0\" />\n                <element signature=\"e#19973#20462#0\" />\n                <element signature=\"e#20565#21143#0\" />\n                <element signature=\"e#21565#22086#0\" />\n                <element signature=\"e#21622#21684#0\" />\n                <element signature=\"e#22236#22656#0\" />\n                <element signature=\"e#22236#22298#0\" />\n                <element signature=\"e#22904#40876#0\" />\n                <element signature=\"e#22904#22920#0\" />\n                <element signature=\"e#23585#23719#0\" />\n                <element signature=\"e#23814#24011#0\" />\n                <element signature=\"e#24043#24096#0\" />\n                <element signature=\"e#24657#40876#0\" />\n                <element signature=\"e#24657#24724#0\" />\n                <element signature=\"e#25316#25422#0\" />\n                <element signature=\"e#26171#28304#1\" />\n                <element signature=\"e#28347#40134#0\" />\n                <element signature=\"e#28415#40017#0\" />\n                <element signature=\"e#28440#30313#0\" />\n                <element signature=\"e#28821#30256#0\" />\n                <element signature=\"e#29642#30256#0\" />\n                <element signature=\"e#29784#29942#0\" />\n                <element signature=\"e#30359#30898#0\" />\n                <element signature=\"e#30419#30481#0\" />\n                <element signature=\"e#30942#35313#0\" />\n                <element signature=\"e#31539#31633#0\" />\n                <element signature=\"e#33569#33665#0\" />\n                <element signature=\"e#33989#34133#0\" />\n                <element signature=\"e#34223#34538#0\" />\n                <element signature=\"e#34820#35248#0\" />\n                <element signature=\"e#35358#35926#0\" />\n                <element signature=\"e#35421#35483#0\" />\n                <element signature=\"e#35969#39384#0\" />\n                <element signature=\"e#36023#39384#0\" />\n                <element signature=\"e#36598#36617#0\" />\n                <element signature=\"e#37881#38320#0\" />\n                <element signature=\"e#37932#37948#0\" />\n                <element signature=\"e#38431#38963#0\" />\n                <element signature=\"e#39431#40017#0\" />\n                <element signature=\"e#39509#39571#0\" />\n                <element signature=\"e#40190#40622#0\" />\n                <element signature=\"e#40190#40252#0\" />\n                <element signature=\"e#42413#59289#0\" />\n                <element signature=\"e#43583#43724#0\" />\n                <element signature=\"e#43840#44052#0\" />\n                <element signature=\"e#44280#44533#0\" />\n                <element signature=\"e#44554#44690#0\" />\n                <element signature=\"e#44696#44711#0\" />\n                <element signature=\"e#45256#59289#0\" />\n                <element signature=\"e#45467#45499#0\" />\n                <element signature=\"e#47398#48177#0\" />\n                <element signature=\"e#47450#48136#0\" />\n                <element signature=\"e#47779#47944#0\" />\n                <element signature=\"e#48329#48354#0\" />\n                <element signature=\"e#48643#48669#0\" />\n                <element signature=\"e#48977#49147#0\" />\n                <element signature=\"e#49433#56198#0\" />\n                <element signature=\"e#49433#49483#0\" />\n                <element signature=\"e#49531#56111#0\" />\n                <element signature=\"e#49712#55896#0\" />\n                <element signature=\"e#50067#50228#0\" />\n                <element signature=\"e#50309#52781#0\" />\n                <element signature=\"e#50400#50451#0\" />\n                <element signature=\"e#51236#51708#0\" />\n                <element signature=\"e#52928#52941#0\" />\n                <element signature=\"e#53095#55896#0\" />\n                <element signature=\"e#53128#55831#0\" />\n                <element signature=\"e#53185#55831#0\" />\n                <element signature=\"e#54638#55177#0\" />\n                <element signature=\"e#55277#55748#0\" />\n                <element signature=\"e#55915#55916#0\" />\n                <element signature=\"e#56148#56198#0\" />\n                <element signature=\"e#56271#56290#0\" />\n                <element signature=\"e#57156#59289#1\" />\n                <element signature=\"e#59436#77680#0\" />\n                <element signature=\"e#59764#59802#0\" />\n                <element signature=\"e#60762#60809#0\" />\n                <element signature=\"e#60828#60969#0\" />\n                <element signature=\"e#61085#61297#0\" />\n                <element signature=\"e#61525#61778#0\" />\n                <element signature=\"e#61799#61935#0\" />\n                <element signature=\"e#61941#61956#0\" />\n                <element signature=\"e#62526#74792#0\" />\n                <element signature=\"e#62738#62770#0\" />\n                <element signature=\"e#64670#65441#0\" />\n                <element signature=\"e#64722#65400#0\" />\n                <element signature=\"e#65056#65209#0\" />\n                <element signature=\"e#65592#65617#0\" />\n                <element signature=\"e#65905#65931#0\" />\n                <element signature=\"e#66267#66436#0\" />\n                <element signature=\"e#66492#66596#0\" />\n                <element signature=\"e#66935#74488#0\" />\n                <element signature=\"e#67134#74445#0\" />\n                <element signature=\"e#67217#74397#0\" />\n                <element signature=\"e#67316#74340#0\" />\n                <element signature=\"e#67521#74340#0\" />\n                <element signature=\"e#67916#68085#0\" />\n                <element signature=\"e#68356#71358#0\" />\n                <element signature=\"e#68461#68512#0\" />\n                <element signature=\"e#69202#71071#0\" />\n                <element signature=\"e#71164#71177#0\" />\n                <element signature=\"e#71492#74267#0\" />\n                <element signature=\"e#73099#73639#0\" />\n                <element signature=\"e#73739#74267#0\" />\n                <element signature=\"e#74548#74549#0\" />\n                <element signature=\"e#74854#74873#0\" />\n                <element signature=\"e#75675#77680#1\" />\n                <element signature=\"e#77853#96273#0\" />\n                <element signature=\"e#78154#78192#0\" />\n                <element signature=\"e#79152#79199#0\" />\n                <element signature=\"e#79218#79359#0\" />\n                <element signature=\"e#79475#79687#0\" />\n                <element signature=\"e#80189#80325#0\" />\n                <element signature=\"e#80331#80346#0\" />\n                <element signature=\"e#81128#81160#0\" />\n                <element signature=\"e#83060#83831#0\" />\n                <element signature=\"e#83112#83790#0\" />\n                <element signature=\"e#83446#83599#0\" />\n                <element signature=\"e#83982#84007#0\" />\n                <element signature=\"e#84295#84321#0\" />\n                <element signature=\"e#85788#92988#0\" />\n                <element signature=\"e#86308#86477#0\" />\n                <element signature=\"e#86574#89770#0\" />\n                <element signature=\"e#86681#86732#0\" />\n                <element signature=\"e#87422#89483#0\" />\n                <element signature=\"e#89576#89589#0\" />\n                <element signature=\"e#92960#92961#0\" />\n                <element signature=\"e#93266#93285#0\" />\n                <element signature=\"e#94087#96092#1\" />\n                <element signature=\"e#96121#96531#0\" />\n                <element signature=\"e#96210#96345#0\" />\n                <element signature=\"e#96368#96505#0\" />\n                <element signature=\"e#96560#96842#0\" />\n                <element signature=\"e#96656#96814#0\" />\n                <element signature=\"e#96843#96865#0\" />\n                <element signature=\"e#96488#96768#0\" />\n                <element signature=\"e#96782#96999#0\" />\n                <element signature=\"e#97648#97838#0\" />\n                <element signature=\"e#98290#98342#0\" />\n                <element signature=\"e#99958#99972#0\" />\n              </folding>\n            </state>\n          </provider>\n        </entry>\n      </file>\n    </leaf>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"FindInProjectRecents\">\n    <findStrings>\n      <find>book_try_cnt</find>\n      <find>able_ls</find>\n      <find>type</find>\n      <find>kakao_message</find>\n      <find>data</find>\n      <find>column</find>\n      <find>and</find>\n      <find>timeTable</find>\n      <find>platfrom_ver</find>\n      <find>temp_out_fee</find>\n      <find>find_elements</find>\n      <find>implicitly</find>\n      <find>wait</find>\n      <find>WebDriverWait</find>\n      <find>impli</find>\n      <find>hour_option</find>\n      <find>s</find>\n      <find>div</find>\n      <find>reserve_try_cnt</find>\n      <find>info_ipo</find>\n      <find>wish_date</find>\n      <find>keys</find>\n      <find>info_date_ipo</find>\n      <find>schedule</find>\n      <find>temp_date</find>\n      <find>course_timetable</find>\n      <find>time_ls</find>\n      <find>reservable_table</find>\n      <find>reservable_time_table</find>\n      <find>telegram_message</find>\n    </findStrings>\n    <replaceStrings>\n      <replace>step_dic</replace>\n      <replace>seat_ls</replace>\n      <replace>dt</replace>\n      <replace>reserve_cnt</replace>\n      <replace>content_type</replace>\n      <replace>good_luck_kakao</replace>\n      <replace>plaform_ver</replace>\n      <replace>date_ls</replace>\n      <replace>temp_time</replace>\n      <replace>temp_price</replace>\n    </replaceStrings>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"UPDATE_TYPE\" value=\"MERGE\" />\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"IdeDocumentHistory\">\n    <option name=\"CHANGED_PATHS\">\n      <list>\n        <option value=\"$PROJECT_DIR$/teckect_reserv_move_step1.py\" />\n        <option value=\"$PROJECT_DIR$/ticketing_interpark_for_macos.py\" />\n        <option value=\"$PROJECT_DIR$/ticketing_interpark.py\" />\n        <option value=\"$PROJECT_DIR$/sysnoloy_schedule_test.py\" />\n        <option value=\"$PROJECT_DIR$/lotto_auto_purchasing.py\" />\n        <option value=\"$PROJECT_DIR$/ddd.py\" />\n        <option value=\"$PROJECT_DIR$/chromedriver_autoinstall.py\" />\n        <option value=\"$PROJECT_DIR$/chromedriver_autoinstall_raw.py\" />\n        <option value=\"$PROJECT_DIR$/telegram_message.py\" />\n        <option value=\"$PROJECT_DIR$/lotto_auto_purchase_for_macmini.py\" />\n        <option value=\"$PROJECT_DIR$/gittest.py\" />\n        <option value=\"$PROJECT_DIR$/reservation_golf.py\" />\n        <option value=\"$PROJECT_DIR$/test.py\" />\n        <option value=\"$PROJECT_DIR$/schedule.py\" />\n        <option value=\"$PROJECT_DIR$/schedule2.py\" />\n        <option value=\"$PROJECT_DIR$/sched.py\" />\n        <option value=\"$PROJECT_DIR$/reservation_golf_for_macmini.py\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectFrameBounds\" extendedState=\"6\">\n    <option name=\"x\" value=\"1876\" />\n    <option name=\"y\" value=\"80\" />\n    <option name=\"width\" value=\"1936\" />\n    <option name=\"height\" value=\"1056\" />\n  </component>\n  <component name=\"ProjectId\" id=\"1wA6erNCcB3F8sls7nk45jRobtC\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectView\">\n    <navigator proportions=\"\" version=\"1\">\n      <foldersAlwaysOnTop value=\"true\" />\n    </navigator>\n    <panes>\n      <pane id=\"Scope\" />\n      <pane id=\"ProjectPane\">\n        <subPane>\n          <expand>\n            <path>\n              <item name=\"python\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"python\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n            <path>\n              <item name=\"python\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"python\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"94\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n            <path>\n              <item name=\"python\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"python\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"95\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n            <path>\n              <item name=\"python\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"python\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"build\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n          </expand>\n          <select />\n        </subPane>\n      </pane>\n    </panes>\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\n  </component>\n  <component name=\"PyConsoleOptionsProvider\">\n    <option name=\"myPythonConsoleState\">\n      <console-settings module-name=\"work\" is-module-sdk=\"true\">\n        <option name=\"myUseModuleSdk\" value=\"true\" />\n        <option name=\"myModuleName\" value=\"work\" />\n      </console-settings>\n    </option>\n    <option name=\"myUseExistingConsole\" value=\"true\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"E:\\python\" />\n    </key>\n  </component>\n  <component name=\"RunDashboard\">\n    <option name=\"ruleStates\">\n      <list>\n        <RuleState>\n          <option name=\"name\" value=\"ConfigurationTypeDashboardGroupingRule\" />\n        </RuleState>\n        <RuleState>\n          <option name=\"name\" value=\"StatusDashboardGroupingRule\" />\n        </RuleState>\n      </list>\n    </option>\n  </component>\n  <component name=\"RunManager\" selected=\"Python.lotto_auto_purchasing\">\n    <configuration name=\"lotto_auto_purchase_for_macmini\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"work\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$USER_HOME$/python/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/lotto_auto_purchase_for_macmini.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"lotto_auto_purchasing\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <module name=\"work\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/lotto_auto_purchasing.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"reservation_golf_for_macmini\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"work\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/reservation_golf_for_macmini.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"true\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"telegram_message\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"work\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/telegram_message.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"ticketing_interpark\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"work\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/ticketing_interpark.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Python.lotto_auto_purchase_for_macmini\" />\n      <item itemvalue=\"Python.lotto_auto_purchasing\" />\n      <item itemvalue=\"Python.reservation_golf_for_macmini\" />\n      <item itemvalue=\"Python.telegram_message\" />\n      <item itemvalue=\"Python.ticketing_interpark\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.lotto_auto_purchasing\" />\n        <item itemvalue=\"Python.reservation_golf_for_macmini\" />\n        <item itemvalue=\"Python.telegram_message\" />\n        <item itemvalue=\"Python.lotto_auto_purchase_for_macmini\" />\n        <item itemvalue=\"Python.ticketing_interpark\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" BundledDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" Dictionaries=\"0\" CorrectionsLimit=\"5\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" />\n  <component name=\"SvnConfiguration\">\n    <configuration />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"d6db7a6a-0e4d-4897-80d8-17603bb375bf\" name=\"Default Changelist\" comment=\"\" />\n      <created>1627889143966</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1627889143966</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"ticket code update\">\n      <created>1627970794777</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1627970794777</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"인터파크 티켓 예매 구조를 거의 파악하였고&#10;셀레니움으로 엘리먼트 찾고 수행하는 기능 정리 되었음\">\n      <created>1628008943916</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1628008943916</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"인터파크 티켓 예매 구조를 거의 파악하였고&#10;셀레니움으로 엘리먼트 찾고 수행하는 기능 정리 되었음\">\n      <created>1628058424422</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1628058424422</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"로또 구매를 자동으로 할 수 있게 매크로 작성함\">\n      <created>1629472447008</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1629472447008</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"로또 구매를 자동으로 할 수 있게 매크로 작성함\">\n      <created>1629472619520</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1629472619520</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"로또 구매를 자동으로 할 수 있게 매크로 작성함\">\n      <created>1632631810870</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1632631810870</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"로또 구매를 자동으로 할 수 있게 매크로 작성함&#10;추가로 정해진 시간에 동작할 수 있도록 스케줄 기능 추가함\">\n      <created>1632638968981</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1632638968982</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Merge remote-tracking branch 'github/ohkily/python/master'&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\">\n      <created>1632659805200</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1632659805200</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"chrome driver를 자동으로 설치하여 사용할 수 있게 해주는 lib\">\n      <created>1633361167479</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1633361167480</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"chrome driver를 자동으로 설치하여 사용할 수 있게 해주는 lib\">\n      <created>1633361615047</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1633361615047</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"chrome driver를 자동으로 설치하여 사용할 수 있게 해주는 lib\">\n      <created>1633364115667</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1633364115667</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"골프 자동 예약 메크로\">\n      <created>1633970481296</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1633970481296</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"골프 자동 예약 메크로\">\n      <created>1633970592285</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1633970592285</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"site 변경 여부 test 기능 추가\">\n      <created>1634407072288</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1634407072288</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"macpro macmini 구분 개선\">\n      <created>1635086635830</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1635086635830</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"macpro macmini 구분 개선 osopt에 macpro or macmini 구분\">\n      <created>1635117553324</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1635117553324</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"bug fix\">\n      <created>1635683961856</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1635683961856</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"bug fix\">\n      <created>1635684113498</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1635684113498</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"bug fix\">\n      <created>1635684260839</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1635684260839</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"bug fix\">\n      <created>1635684352787</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1635684352787</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"bug fix\">\n      <created>1635689717079</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1635689717079</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"bug fix\">\n      <created>1635689774369</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1635689774369</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"telegram messate로 메세지 보내기 기능 update\">\n      <created>1635908480544</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1635908480544</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"telegram messate로 메세지 보내기 기능 update\">\n      <created>1635911804366</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1635911804366</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"github file extend key convert to .py\">\n      <created>1636377398611</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1636377398611</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"telegram token update\">\n      <created>1638708857502</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1638708857503</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"telegram token update\">\n      <created>1638708865562</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1638708865562</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"telegram token update\">\n      <created>1644166735639</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1644166735639</updated>\n    </task>\n    <task id=\"LOCAL-00029\" summary=\"telegram token update\">\n      <created>1644218727797</created>\n      <option name=\"number\" value=\"00029\" />\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1644218727797</updated>\n    </task>\n    <task id=\"LOCAL-00030\" summary=\"reserve cnt codition update\">\n      <created>1644315296550</created>\n      <option name=\"number\" value=\"00030\" />\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1644315296550</updated>\n    </task>\n    <task id=\"LOCAL-00031\" summary=\"chrome driver auto selection\">\n      <created>1644316333064</created>\n      <option name=\"number\" value=\"00031\" />\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1644316333064</updated>\n    </task>\n    <task id=\"LOCAL-00032\" summary=\"chrome driver auto selection\">\n      <created>1644319012676</created>\n      <option name=\"number\" value=\"00032\" />\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1644319012676</updated>\n    </task>\n    <task id=\"LOCAL-00033\" summary=\"chrome driver auto selection\">\n      <created>1644319023682</created>\n      <option name=\"number\" value=\"00033\" />\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1644319023682</updated>\n    </task>\n    <task id=\"LOCAL-00034\" summary=\"chrome driver auto install in windows pc.\">\n      <created>1644325422031</created>\n      <option name=\"number\" value=\"00034\" />\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1644325422031</updated>\n    </task>\n    <task id=\"LOCAL-00035\" summary=\"chrome driver auto install in windows pc.\">\n      <created>1644326064350</created>\n      <option name=\"number\" value=\"00035\" />\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1644326064350</updated>\n    </task>\n    <task id=\"LOCAL-00036\" summary=\"chrome driver auto install in windows pc.\">\n      <created>1644326407681</created>\n      <option name=\"number\" value=\"00036\" />\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1644326407681</updated>\n    </task>\n    <task id=\"LOCAL-00037\" summary=\"ipo cc update\">\n      <created>1644418175699</created>\n      <option name=\"number\" value=\"00037\" />\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1644418175699</updated>\n    </task>\n    <task id=\"LOCAL-00038\" summary=\"ipo cc function 완료\">\n      <created>1644856503406</created>\n      <option name=\"number\" value=\"00038\" />\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1644856503406</updated>\n    </task>\n    <task id=\"LOCAL-00039\" summary=\"ipo cc function 완료\">\n      <created>1644936191404</created>\n      <option name=\"number\" value=\"00039\" />\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1644936191404</updated>\n    </task>\n    <task id=\"LOCAL-00040\" summary=\"schedule 완성\">\n      <created>1645192807816</created>\n      <option name=\"number\" value=\"00040\" />\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1645192807816</updated>\n    </task>\n    <task id=\"LOCAL-00041\" summary=\"schedule 완성\">\n      <created>1645886316783</created>\n      <option name=\"number\" value=\"00041\" />\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1645886316783</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"42\" />\n    <servers />\n  </component>\n  <component name=\"TodoView\">\n    <todo-panel id=\"selected-file\">\n      <is-autoscroll-to-source value=\"true\" />\n    </todo-panel>\n    <todo-panel id=\"all\">\n      <are-packages-shown value=\"true\" />\n      <is-autoscroll-to-source value=\"true\" />\n    </todo-panel>\n  </component>\n  <component name=\"ToolWindowManager\">\n    <frame x=\"1912\" y=\"-8\" width=\"1936\" height=\"1056\" extended-state=\"6\" />\n    <editor active=\"true\" />\n    <layout>\n      <window_info content_ui=\"combo\" id=\"Project\" order=\"0\" sideWeight=\"0.47492626\" visible=\"true\" weight=\"0.24973656\" />\n      <window_info id=\"Structure\" order=\"1\" sideWeight=\"0.52507377\" side_tool=\"true\" weight=\"0.24973656\" />\n      <window_info id=\"Favorites\" order=\"2\" side_tool=\"true\" />\n      <window_info anchor=\"bottom\" id=\"Message\" order=\"0\" />\n      <window_info anchor=\"bottom\" id=\"Find\" order=\"1\" weight=\"0.329718\" />\n      <window_info anchor=\"bottom\" id=\"Run\" order=\"2\" weight=\"0.329718\" />\n      <window_info anchor=\"bottom\" id=\"Debug\" order=\"3\" weight=\"0.4\" />\n      <window_info anchor=\"bottom\" id=\"Cvs\" order=\"4\" weight=\"0.25\" />\n      <window_info anchor=\"bottom\" id=\"Inspection\" order=\"5\" weight=\"0.4\" />\n      <window_info anchor=\"bottom\" id=\"TODO\" order=\"6\" weight=\"0.329718\" />\n      <window_info anchor=\"bottom\" id=\"Terminal\" order=\"7\" sideWeight=\"0.49947146\" weight=\"0.3286334\" />\n      <window_info anchor=\"bottom\" id=\"Event Log\" order=\"8\" sideWeight=\"0.50105375\" side_tool=\"true\" weight=\"0.3329718\" />\n      <window_info active=\"true\" anchor=\"bottom\" id=\"Python Console\" order=\"9\" sideWeight=\"0.49894625\" visible=\"true\" weight=\"0.2646421\" />\n      <window_info anchor=\"bottom\" id=\"Version Control\" order=\"10\" sideWeight=\"0.49947146\" weight=\"0.32936078\" />\n      <window_info anchor=\"bottom\" id=\"Messages\" order=\"11\" />\n      <window_info anchor=\"right\" id=\"Commander\" internal_type=\"SLIDING\" order=\"0\" type=\"SLIDING\" weight=\"0.4\" />\n      <window_info anchor=\"right\" id=\"Ant Build\" order=\"1\" weight=\"0.25\" />\n      <window_info anchor=\"right\" content_ui=\"combo\" id=\"Hierarchy\" order=\"2\" weight=\"0.25\" />\n    </layout>\n    <layout-to-restore>\n      <window_info content_ui=\"combo\" id=\"Project\" order=\"0\" sideWeight=\"0.47492626\" visible=\"true\" weight=\"0.24973656\" />\n      <window_info id=\"Structure\" order=\"1\" sideWeight=\"0.52507377\" side_tool=\"true\" visible=\"true\" weight=\"0.24973656\" />\n      <window_info id=\"Favorites\" order=\"2\" side_tool=\"true\" />\n      <window_info anchor=\"bottom\" id=\"Message\" order=\"0\" />\n      <window_info anchor=\"bottom\" id=\"Find\" order=\"1\" />\n      <window_info anchor=\"bottom\" id=\"Run\" order=\"2\" weight=\"0.329718\" />\n      <window_info anchor=\"bottom\" id=\"Debug\" order=\"3\" weight=\"0.4\" />\n      <window_info anchor=\"bottom\" id=\"Cvs\" order=\"4\" weight=\"0.25\" />\n      <window_info anchor=\"bottom\" id=\"Inspection\" order=\"5\" weight=\"0.4\" />\n      <window_info anchor=\"bottom\" id=\"TODO\" order=\"6\" weight=\"0.329718\" />\n      <window_info anchor=\"bottom\" id=\"Terminal\" order=\"7\" sideWeight=\"0.49947146\" weight=\"0.3286334\" />\n      <window_info anchor=\"bottom\" id=\"Event Log\" order=\"8\" sideWeight=\"0.50105375\" side_tool=\"true\" weight=\"0.3329718\" />\n      <window_info active=\"true\" anchor=\"bottom\" id=\"Python Console\" order=\"9\" sideWeight=\"0.49894625\" visible=\"true\" weight=\"0.2646421\" />\n      <window_info anchor=\"bottom\" id=\"Version Control\" order=\"10\" sideWeight=\"0.49947146\" weight=\"0.329718\" />\n      <window_info anchor=\"right\" id=\"Commander\" internal_type=\"SLIDING\" order=\"0\" type=\"SLIDING\" weight=\"0.4\" />\n      <window_info anchor=\"right\" id=\"Ant Build\" order=\"1\" weight=\"0.25\" />\n      <window_info anchor=\"right\" content_ui=\"combo\" id=\"Hierarchy\" order=\"2\" weight=\"0.25\" />\n    </layout-to-restore>\n  </component>\n  <component name=\"Vcs.Log.History.Properties\">\n    <option name=\"COLUMN_ORDER\">\n      <list>\n        <option value=\"0\" />\n        <option value=\"2\" />\n        <option value=\"3\" />\n        <option value=\"1\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"RECENTLY_FILTERED_USER_GROUPS\">\n                <collection />\n              </option>\n              <option name=\"RECENTLY_FILTERED_BRANCH_GROUPS\">\n                <collection />\n              </option>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"master\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"RECENT_FILTERS\">\n      <map>\n        <entry key=\"Branch\">\n          <value>\n            <list />\n          </value>\n        </entry>\n        <entry key=\"User\">\n          <value>\n            <list />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <ignored-roots>\n      <path value=\"$PROJECT_DIR$/github/test\" />\n    </ignored-roots>\n    <MESSAGE value=\"ticket code update\" />\n    <MESSAGE value=\"인터파크 티켓 예매 구조를 거의 파악하였고&#10;셀레니움으로 엘리먼트 찾고 수행하는 기능 정리 되었음\" />\n    <MESSAGE value=\"로또 구매를 자동으로 할 수 있게 매크로 작성함\" />\n    <MESSAGE value=\"로또 구매를 자동으로 할 수 있게 매크로 작성함&#10;추가로 정해진 시간에 동작할 수 있도록 스케줄 기능 추가함\" />\n    <MESSAGE value=\"chrome driver를 자동으로 설치하여 사용할 수 있게 해주는 lib\" />\n    <MESSAGE value=\"골프 자동 예약 메크로\" />\n    <MESSAGE value=\"site 변경 여부 test 기능 추가\" />\n    <MESSAGE value=\"macpro macmini 구분 개선\" />\n    <MESSAGE value=\"macpro macmini 구분 개선 osopt에 macpro or macmini 구분\" />\n    <MESSAGE value=\"bug fix\" />\n    <MESSAGE value=\"telegram messate로 메세지 보내기 기능 update\" />\n    <MESSAGE value=\"github file extend key convert to .py\" />\n    <MESSAGE value=\"telegram token update\" />\n    <MESSAGE value=\"reserve cnt codition update\" />\n    <MESSAGE value=\"chrome driver auto selection\" />\n    <MESSAGE value=\"chrome driver auto install in windows pc.\" />\n    <MESSAGE value=\"ipo cc update\" />\n    <MESSAGE value=\"ipo cc function 완료\" />\n    <MESSAGE value=\"schedule 완성\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"schedule 완성\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/lotto_auto_purchase_for_macmini.py</url>\n          <line>55</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"editorHistoryManager\">\n    <entry file=\"file://$PROJECT_DIR$/soup_txt.txt\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"38\">\n          <caret line=\"44\" lean-forward=\"true\" selection-start-line=\"44\" selection-end-line=\"44\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/reserv_first_txt.txt\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"147\">\n          <caret line=\"94\" column=\"72\" selection-start-line=\"94\" selection-start-column=\"72\" selection-end-line=\"94\" selection-end-column=\"72\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/teckect_reserv_move_step1.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"209\">\n          <caret line=\"11\" lean-forward=\"true\" selection-start-line=\"11\" selection-end-line=\"11\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/reserv_second_txt.txt\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"547\">\n          <caret line=\"2096\" column=\"13\" selection-start-line=\"2096\" selection-start-column=\"13\" selection-end-line=\"2096\" selection-end-column=\"13\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/synoloy_schedule_test.py\" />\n    <entry file=\"file://$PROJECT_DIR$/ddd.py\" />\n    <entry file=\"file://$PROJECT_DIR$/kakao_talk_message.py\" />\n    <entry file=\"file://$PROJECT_DIR$/lotto_auto_purchasing.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"489\">\n          <caret line=\"147\" column=\"46\" lean-forward=\"true\" selection-start-line=\"147\" selection-start-column=\"46\" selection-end-line=\"147\" selection-end-column=\"46\" />\n          <folding>\n            <element signature=\"n#!!doc\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/kakao_message.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"93\">\n          <caret line=\"5\" selection-start-line=\"5\" selection-end-line=\"5\" selection-end-column=\"11\" />\n          <folding>\n            <element signature=\"e#578#1107#0\" />\n            <element signature=\"e#1397#1735#0\" />\n            <element signature=\"e#1780#2622#0\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/ticketing_interpark.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"272\">\n          <caret line=\"398\" column=\"13\" selection-start-line=\"398\" selection-start-column=\"13\" selection-end-line=\"398\" selection-end-column=\"13\" />\n          <folding>\n            <element signature=\"n#!!doc\" />\n            <element signature=\"e#33#44#0\" expanded=\"true\" />\n            <element signature=\"e#578#620#0\" />\n            <element signature=\"e#820#1101#0\" />\n            <element signature=\"e#1418#6354#0\" />\n            <element signature=\"e#1516#3288#0\" />\n            <element signature=\"e#1527#1644#0\" />\n            <element signature=\"e#1672#1919#0\" />\n            <element signature=\"e#1947#2372#0\" />\n            <element signature=\"e#2400#2817#0\" />\n            <element signature=\"e#2845#3270#0\" />\n            <element signature=\"e#3362#3802#0\" />\n            <element signature=\"e#3847#3936#0\" />\n            <element signature=\"e#3973#4414#0\" />\n            <element signature=\"e#4458#4548#0\" />\n            <element signature=\"e#4585#5025#0\" />\n            <element signature=\"e#5069#5159#0\" />\n            <element signature=\"e#5196#5597#0\" />\n            <element signature=\"e#5641#5731#0\" />\n            <element signature=\"e#5769#6076#0\" />\n            <element signature=\"e#6120#6210#0\" />\n            <element signature=\"e#6373#6423#0\" />\n            <element signature=\"e#6468#6582#0\" />\n            <element signature=\"e#6767#6783#0\" />\n            <element signature=\"e#6910#6926#0\" />\n            <element signature=\"e#7572#7586#0\" />\n            <element signature=\"e#7654#7663#0\" />\n            <element signature=\"e#8094#8114#0\" />\n            <element signature=\"e#9068#9119#0\" />\n            <element signature=\"e#9089#9119#0\" />\n            <element signature=\"e#9136#9187#0\" />\n            <element signature=\"e#9157#9187#0\" />\n            <element signature=\"e#9334#9416#0\" />\n            <element signature=\"e#9368#9394#0\" />\n            <element signature=\"e#9556#9612#0\" />\n            <element signature=\"e#9588#9612#0\" />\n            <element signature=\"e#9775#9782#0\" />\n            <element signature=\"e#9957#10046#0\" />\n            <element signature=\"e#10615#10635#0\" />\n            <element signature=\"e#11772#11800#0\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/chromedriver_autoinstall_raw.py\" />\n    <entry file=\"file://$PROJECT_DIR$/chromedriver_autoinstall.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"110\">\n          <caret line=\"21\" column=\"40\" selection-start-line=\"21\" selection-start-column=\"40\" selection-end-line=\"21\" selection-end-column=\"40\" />\n          <folding>\n            <element signature=\"e#0#30#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/ipo_main.html\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"462\">\n          <caret line=\"21\" lean-forward=\"true\" selection-start-line=\"21\" selection-end-line=\"21\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/gittest.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"2794\">\n          <caret line=\"127\" column=\"20\" selection-start-line=\"127\" selection-start-column=\"20\" selection-end-line=\"127\" selection-end-column=\"20\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/lotto_auto_purchase_for_macmini.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"2530\">\n          <caret line=\"132\" selection-start-line=\"132\" selection-end-line=\"132\" />\n          <folding>\n            <element signature=\"n#!!doc\" />\n            <element signature=\"e#9196#9258#0\" />\n            <element signature=\"e#10215#10276#0\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/telegram_message.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"1672\">\n          <caret line=\"78\" selection-start-line=\"35\" selection-end-line=\"78\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/test.py\" />\n    <entry file=\"file://$PROJECT_DIR$/reservation_golf.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"578\">\n          <caret line=\"806\" column=\"25\" selection-start-line=\"806\" selection-start-column=\"25\" selection-end-line=\"806\" selection-end-column=\"25\" />\n          <folding>\n            <element signature=\"e#1#34#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$USER_HOME$/Anaconda3/Lib/site-packages/selenium/webdriver/common/by.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"453\">\n          <caret line=\"34\" column=\"33\" lean-forward=\"true\" selection-start-line=\"34\" selection-start-column=\"33\" selection-end-line=\"34\" selection-end-column=\"33\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/schedule2.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"-2047\">\n          <caret line=\"19\" column=\"48\" lean-forward=\"true\" selection-start-line=\"19\" selection-start-column=\"48\" selection-end-line=\"19\" selection-end-column=\"48\" />\n          <folding>\n            <element signature=\"e#0#16#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/sched.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"375\">\n          <caret line=\"15\" column=\"15\" lean-forward=\"true\" selection-start-line=\"15\" selection-start-column=\"15\" selection-end-line=\"15\" selection-end-column=\"15\" />\n          <folding>\n            <element signature=\"e#378#389#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/reservation_golf_for_macmini.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"423\">\n          <caret line=\"2103\" column=\"54\" lean-forward=\"true\" selection-start-line=\"2103\" selection-start-column=\"54\" selection-end-line=\"2103\" selection-end-column=\"54\" />\n          <folding>\n            <element signature=\"e#946#1297#0\" />\n            <element signature=\"e#1137#1247#0\" />\n            <element signature=\"e#1323#2701#0\" />\n            <element signature=\"e#1477#1786#0\" />\n            <element signature=\"e#1875#2041#0\" />\n            <element signature=\"e#2128#2494#0\" />\n            <element signature=\"e#2128#2267#0\" />\n            <element signature=\"e#2513#2610#0\" />\n            <element signature=\"e#2870#3008#0\" />\n            <element signature=\"e#3291#3629#0\" />\n            <element signature=\"e#3347#3467#0\" />\n            <element signature=\"e#3674#4516#0\" />\n            <element signature=\"e#3739#3838#0\" />\n            <element signature=\"e#3867#3919#0\" />\n            <element signature=\"e#3932#4257#0\" />\n            <element signature=\"e#3972#4250#0\" />\n            <element signature=\"e#4097#4209#0\" />\n            <element signature=\"e#4615#6528#0\" />\n            <element signature=\"e#4802#5574#1\" />\n            <element signature=\"e#5615#5705#0\" />\n            <element signature=\"e#5749#5884#0\" />\n            <element signature=\"e#5929#6060#0\" />\n            <element signature=\"e#6107#6436#0\" />\n            <element signature=\"e#6107#6150#0\" />\n            <element signature=\"e#6559#6874#0\" />\n            <element signature=\"e#6898#7215#0\" />\n            <element signature=\"e#7313#22794#0\" />\n            <element signature=\"e#7313#7367#0\" />\n            <element signature=\"e#8025#8078#0\" />\n            <element signature=\"e#8638#8705#0\" />\n            <element signature=\"e#9228#9334#0\" />\n            <element signature=\"e#10024#12029#1\" />\n            <element signature=\"e#12096#22188#0\" />\n            <element signature=\"e#12128#22086#0\" />\n            <element signature=\"e#12149#14075#0\" />\n            <element signature=\"e#12573#14026#0\" />\n            <element signature=\"e#13356#14026#0\" />\n            <element signature=\"e#13529#13679#0\" />\n            <element signature=\"e#14113#14638#0\" />\n            <element signature=\"e#14169#14231#0\" />\n            <element signature=\"e#14673#21526#0\" />\n            <element signature=\"e#14812#14901#0\" />\n            <element signature=\"e#15024#15113#0\" />\n            <element signature=\"e#15156#15212#0\" />\n            <element signature=\"e#15416#15510#0\" />\n            <element signature=\"e#16323#16379#0\" />\n            <element signature=\"e#16837#16892#0\" />\n            <element signature=\"e#17122#17262#0\" />\n            <element signature=\"e#17344#17643#0\" />\n            <element signature=\"e#17901#18309#0\" />\n            <element signature=\"e#18432#21526#0\" />\n            <element signature=\"e#18976#18995#0\" />\n            <element signature=\"e#19973#20462#0\" />\n            <element signature=\"e#20565#21143#0\" />\n            <element signature=\"e#21565#22086#0\" />\n            <element signature=\"e#21622#21684#0\" />\n            <element signature=\"e#22236#22656#0\" />\n            <element signature=\"e#22236#22298#0\" />\n            <element signature=\"e#22904#40876#0\" />\n            <element signature=\"e#22904#22920#0\" />\n            <element signature=\"e#23585#23719#0\" />\n            <element signature=\"e#23814#24011#0\" />\n            <element signature=\"e#24043#24096#0\" />\n            <element signature=\"e#24657#40876#0\" />\n            <element signature=\"e#24657#24724#0\" />\n            <element signature=\"e#25316#25422#0\" />\n            <element signature=\"e#26171#28304#1\" />\n            <element signature=\"e#28347#40134#0\" />\n            <element signature=\"e#28415#40017#0\" />\n            <element signature=\"e#28440#30313#0\" />\n            <element signature=\"e#28821#30256#0\" />\n            <element signature=\"e#29642#30256#0\" />\n            <element signature=\"e#29784#29942#0\" />\n            <element signature=\"e#30359#30898#0\" />\n            <element signature=\"e#30419#30481#0\" />\n            <element signature=\"e#30942#35313#0\" />\n            <element signature=\"e#31539#31633#0\" />\n            <element signature=\"e#33569#33665#0\" />\n            <element signature=\"e#33989#34133#0\" />\n            <element signature=\"e#34223#34538#0\" />\n            <element signature=\"e#34820#35248#0\" />\n            <element signature=\"e#35358#35926#0\" />\n            <element signature=\"e#35421#35483#0\" />\n            <element signature=\"e#35969#39384#0\" />\n            <element signature=\"e#36023#39384#0\" />\n            <element signature=\"e#36598#36617#0\" />\n            <element signature=\"e#37881#38320#0\" />\n            <element signature=\"e#37932#37948#0\" />\n            <element signature=\"e#38431#38963#0\" />\n            <element signature=\"e#39431#40017#0\" />\n            <element signature=\"e#39509#39571#0\" />\n            <element signature=\"e#40190#40622#0\" />\n            <element signature=\"e#40190#40252#0\" />\n            <element signature=\"e#42413#59289#0\" />\n            <element signature=\"e#43583#43724#0\" />\n            <element signature=\"e#43840#44052#0\" />\n            <element signature=\"e#44280#44533#0\" />\n            <element signature=\"e#44554#44690#0\" />\n            <element signature=\"e#44696#44711#0\" />\n            <element signature=\"e#45256#59289#0\" />\n            <element signature=\"e#45467#45499#0\" />\n            <element signature=\"e#47398#48177#0\" />\n            <element signature=\"e#47450#48136#0\" />\n            <element signature=\"e#47779#47944#0\" />\n            <element signature=\"e#48329#48354#0\" />\n            <element signature=\"e#48643#48669#0\" />\n            <element signature=\"e#48977#49147#0\" />\n            <element signature=\"e#49433#56198#0\" />\n            <element signature=\"e#49433#49483#0\" />\n            <element signature=\"e#49531#56111#0\" />\n            <element signature=\"e#49712#55896#0\" />\n            <element signature=\"e#50067#50228#0\" />\n            <element signature=\"e#50309#52781#0\" />\n            <element signature=\"e#50400#50451#0\" />\n            <element signature=\"e#51236#51708#0\" />\n            <element signature=\"e#52928#52941#0\" />\n            <element signature=\"e#53095#55896#0\" />\n            <element signature=\"e#53128#55831#0\" />\n            <element signature=\"e#53185#55831#0\" />\n            <element signature=\"e#54638#55177#0\" />\n            <element signature=\"e#55277#55748#0\" />\n            <element signature=\"e#55915#55916#0\" />\n            <element signature=\"e#56148#56198#0\" />\n            <element signature=\"e#56271#56290#0\" />\n            <element signature=\"e#57156#59289#1\" />\n            <element signature=\"e#59436#77680#0\" />\n            <element signature=\"e#59764#59802#0\" />\n            <element signature=\"e#60762#60809#0\" />\n            <element signature=\"e#60828#60969#0\" />\n            <element signature=\"e#61085#61297#0\" />\n            <element signature=\"e#61525#61778#0\" />\n            <element signature=\"e#61799#61935#0\" />\n            <element signature=\"e#61941#61956#0\" />\n            <element signature=\"e#62526#74792#0\" />\n            <element signature=\"e#62738#62770#0\" />\n            <element signature=\"e#64670#65441#0\" />\n            <element signature=\"e#64722#65400#0\" />\n            <element signature=\"e#65056#65209#0\" />\n            <element signature=\"e#65592#65617#0\" />\n            <element signature=\"e#65905#65931#0\" />\n            <element signature=\"e#66267#66436#0\" />\n            <element signature=\"e#66492#66596#0\" />\n            <element signature=\"e#66935#74488#0\" />\n            <element signature=\"e#67134#74445#0\" />\n            <element signature=\"e#67217#74397#0\" />\n            <element signature=\"e#67316#74340#0\" />\n            <element signature=\"e#67521#74340#0\" />\n            <element signature=\"e#67916#68085#0\" />\n            <element signature=\"e#68356#71358#0\" />\n            <element signature=\"e#68461#68512#0\" />\n            <element signature=\"e#69202#71071#0\" />\n            <element signature=\"e#71164#71177#0\" />\n            <element signature=\"e#71492#74267#0\" />\n            <element signature=\"e#73099#73639#0\" />\n            <element signature=\"e#73739#74267#0\" />\n            <element signature=\"e#74548#74549#0\" />\n            <element signature=\"e#74854#74873#0\" />\n            <element signature=\"e#75675#77680#1\" />\n            <element signature=\"e#77853#96273#0\" />\n            <element signature=\"e#78154#78192#0\" />\n            <element signature=\"e#79152#79199#0\" />\n            <element signature=\"e#79218#79359#0\" />\n            <element signature=\"e#79475#79687#0\" />\n            <element signature=\"e#80189#80325#0\" />\n            <element signature=\"e#80331#80346#0\" />\n            <element signature=\"e#81128#81160#0\" />\n            <element signature=\"e#83060#83831#0\" />\n            <element signature=\"e#83112#83790#0\" />\n            <element signature=\"e#83446#83599#0\" />\n            <element signature=\"e#83982#84007#0\" />\n            <element signature=\"e#84295#84321#0\" />\n            <element signature=\"e#85788#92988#0\" />\n            <element signature=\"e#86308#86477#0\" />\n            <element signature=\"e#86574#89770#0\" />\n            <element signature=\"e#86681#86732#0\" />\n            <element signature=\"e#87422#89483#0\" />\n            <element signature=\"e#89576#89589#0\" />\n            <element signature=\"e#92960#92961#0\" />\n            <element signature=\"e#93266#93285#0\" />\n            <element signature=\"e#94087#96092#1\" />\n            <element signature=\"e#96121#96531#0\" />\n            <element signature=\"e#96210#96345#0\" />\n            <element signature=\"e#96368#96505#0\" />\n            <element signature=\"e#96560#96842#0\" />\n            <element signature=\"e#96656#96814#0\" />\n            <element signature=\"e#96843#96865#0\" />\n            <element signature=\"e#96488#96768#0\" />\n            <element signature=\"e#96782#96999#0\" />\n            <element signature=\"e#97648#97838#0\" />\n            <element signature=\"e#98290#98342#0\" />\n            <element signature=\"e#99958#99972#0\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5d8c7b3ddf52da983ace1bda02ebcb59ba198070)
+++ b/.idea/workspace.xml	(date 1647005679298)
@@ -4,233 +4,14 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="d6db7a6a-0e4d-4897-80d8-17603bb375bf" name="Default Changelist" comment="">
+    <list default="true" id="d6db7a6a-0e4d-4897-80d8-17603bb375bf" name="Default Changelist" comment="macpro commit">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/reservation_golf_for_macmini.py" beforeDir="false" afterPath="$PROJECT_DIR$/reservation_golf_for_macmini.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/sched.py" beforeDir="false" afterPath="$PROJECT_DIR$/sched.py" afterDir="false" />
     </list>
-    <ignored path="E:\python\.idea\shelf/" />
-    <ignored path="20211117_010932.jpg" />
-    <ignored path="20211117_015751.jpg" />
-    <ignored path="98/chromedriver.exe" />
-    <ignored path="95/chromedriver.exe" />
-    <ignored path="94/chromedriver.exe" />
-    <ignored path="ipo_main.html" />
-    <ignored path="ipo_reserve_sub04_2.html" />
-    <ignored path="obo-t17800628-33.html" />
-    <ignored path="webpage.html" />
-    <ignored path="주행기록.jpg" />
-    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
-  </component>
-  <component name="FileEditorManager">
-    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
-      <file pinned="false" current-in-tab="true">
-        <entry file="file://$PROJECT_DIR$/reservation_golf_for_macmini.py">
-          <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="423">
-              <caret line="2103" column="54" lean-forward="true" selection-start-line="2103" selection-start-column="54" selection-end-line="2103" selection-end-column="54" />
-              <folding>
-                <element signature="e#946#1297#0" />
-                <element signature="e#1137#1247#0" />
-                <element signature="e#1323#2701#0" />
-                <element signature="e#1477#1786#0" />
-                <element signature="e#1875#2041#0" />
-                <element signature="e#2128#2494#0" />
-                <element signature="e#2128#2267#0" />
-                <element signature="e#2513#2610#0" />
-                <element signature="e#2870#3008#0" />
-                <element signature="e#3291#3629#0" />
-                <element signature="e#3347#3467#0" />
-                <element signature="e#3674#4516#0" />
-                <element signature="e#3739#3838#0" />
-                <element signature="e#3867#3919#0" />
-                <element signature="e#3932#4257#0" />
-                <element signature="e#3972#4250#0" />
-                <element signature="e#4097#4209#0" />
-                <element signature="e#4615#6528#0" />
-                <element signature="e#4802#5574#1" />
-                <element signature="e#5615#5705#0" />
-                <element signature="e#5749#5884#0" />
-                <element signature="e#5929#6060#0" />
-                <element signature="e#6107#6436#0" />
-                <element signature="e#6107#6150#0" />
-                <element signature="e#6559#6874#0" />
-                <element signature="e#6898#7215#0" />
-                <element signature="e#7313#22794#0" />
-                <element signature="e#7313#7367#0" />
-                <element signature="e#8025#8078#0" />
-                <element signature="e#8638#8705#0" />
-                <element signature="e#9228#9334#0" />
-                <element signature="e#10024#12029#1" />
-                <element signature="e#12096#22188#0" />
-                <element signature="e#12128#22086#0" />
-                <element signature="e#12149#14075#0" />
-                <element signature="e#12573#14026#0" />
-                <element signature="e#13356#14026#0" />
-                <element signature="e#13529#13679#0" />
-                <element signature="e#14113#14638#0" />
-                <element signature="e#14169#14231#0" />
-                <element signature="e#14673#21526#0" />
-                <element signature="e#14812#14901#0" />
-                <element signature="e#15024#15113#0" />
-                <element signature="e#15156#15212#0" />
-                <element signature="e#15416#15510#0" />
-                <element signature="e#16323#16379#0" />
-                <element signature="e#16837#16892#0" />
-                <element signature="e#17122#17262#0" />
-                <element signature="e#17344#17643#0" />
-                <element signature="e#17901#18309#0" />
-                <element signature="e#18432#21526#0" />
-                <element signature="e#18976#18995#0" />
-                <element signature="e#19973#20462#0" />
-                <element signature="e#20565#21143#0" />
-                <element signature="e#21565#22086#0" />
-                <element signature="e#21622#21684#0" />
-                <element signature="e#22236#22656#0" />
-                <element signature="e#22236#22298#0" />
-                <element signature="e#22904#40876#0" />
-                <element signature="e#22904#22920#0" />
-                <element signature="e#23585#23719#0" />
-                <element signature="e#23814#24011#0" />
-                <element signature="e#24043#24096#0" />
-                <element signature="e#24657#40876#0" />
-                <element signature="e#24657#24724#0" />
-                <element signature="e#25316#25422#0" />
-                <element signature="e#26171#28304#1" />
-                <element signature="e#28347#40134#0" />
-                <element signature="e#28415#40017#0" />
-                <element signature="e#28440#30313#0" />
-                <element signature="e#28821#30256#0" />
-                <element signature="e#29642#30256#0" />
-                <element signature="e#29784#29942#0" />
-                <element signature="e#30359#30898#0" />
-                <element signature="e#30419#30481#0" />
-                <element signature="e#30942#35313#0" />
-                <element signature="e#31539#31633#0" />
-                <element signature="e#33569#33665#0" />
-                <element signature="e#33989#34133#0" />
-                <element signature="e#34223#34538#0" />
-                <element signature="e#34820#35248#0" />
-                <element signature="e#35358#35926#0" />
-                <element signature="e#35421#35483#0" />
-                <element signature="e#35969#39384#0" />
-                <element signature="e#36023#39384#0" />
-                <element signature="e#36598#36617#0" />
-                <element signature="e#37881#38320#0" />
-                <element signature="e#37932#37948#0" />
-                <element signature="e#38431#38963#0" />
-                <element signature="e#39431#40017#0" />
-                <element signature="e#39509#39571#0" />
-                <element signature="e#40190#40622#0" />
-                <element signature="e#40190#40252#0" />
-                <element signature="e#42413#59289#0" />
-                <element signature="e#43583#43724#0" />
-                <element signature="e#43840#44052#0" />
-                <element signature="e#44280#44533#0" />
-                <element signature="e#44554#44690#0" />
-                <element signature="e#44696#44711#0" />
-                <element signature="e#45256#59289#0" />
-                <element signature="e#45467#45499#0" />
-                <element signature="e#47398#48177#0" />
-                <element signature="e#47450#48136#0" />
-                <element signature="e#47779#47944#0" />
-                <element signature="e#48329#48354#0" />
-                <element signature="e#48643#48669#0" />
-                <element signature="e#48977#49147#0" />
-                <element signature="e#49433#56198#0" />
-                <element signature="e#49433#49483#0" />
-                <element signature="e#49531#56111#0" />
-                <element signature="e#49712#55896#0" />
-                <element signature="e#50067#50228#0" />
-                <element signature="e#50309#52781#0" />
-                <element signature="e#50400#50451#0" />
-                <element signature="e#51236#51708#0" />
-                <element signature="e#52928#52941#0" />
-                <element signature="e#53095#55896#0" />
-                <element signature="e#53128#55831#0" />
-                <element signature="e#53185#55831#0" />
-                <element signature="e#54638#55177#0" />
-                <element signature="e#55277#55748#0" />
-                <element signature="e#55915#55916#0" />
-                <element signature="e#56148#56198#0" />
-                <element signature="e#56271#56290#0" />
-                <element signature="e#57156#59289#1" />
-                <element signature="e#59436#77680#0" />
-                <element signature="e#59764#59802#0" />
-                <element signature="e#60762#60809#0" />
-                <element signature="e#60828#60969#0" />
-                <element signature="e#61085#61297#0" />
-                <element signature="e#61525#61778#0" />
-                <element signature="e#61799#61935#0" />
-                <element signature="e#61941#61956#0" />
-                <element signature="e#62526#74792#0" />
-                <element signature="e#62738#62770#0" />
-                <element signature="e#64670#65441#0" />
-                <element signature="e#64722#65400#0" />
-                <element signature="e#65056#65209#0" />
-                <element signature="e#65592#65617#0" />
-                <element signature="e#65905#65931#0" />
-                <element signature="e#66267#66436#0" />
-                <element signature="e#66492#66596#0" />
-                <element signature="e#66935#74488#0" />
-                <element signature="e#67134#74445#0" />
-                <element signature="e#67217#74397#0" />
-                <element signature="e#67316#74340#0" />
-                <element signature="e#67521#74340#0" />
-                <element signature="e#67916#68085#0" />
-                <element signature="e#68356#71358#0" />
-                <element signature="e#68461#68512#0" />
-                <element signature="e#69202#71071#0" />
-                <element signature="e#71164#71177#0" />
-                <element signature="e#71492#74267#0" />
-                <element signature="e#73099#73639#0" />
-                <element signature="e#73739#74267#0" />
-                <element signature="e#74548#74549#0" />
-                <element signature="e#74854#74873#0" />
-                <element signature="e#75675#77680#1" />
-                <element signature="e#77853#96273#0" />
-                <element signature="e#78154#78192#0" />
-                <element signature="e#79152#79199#0" />
-                <element signature="e#79218#79359#0" />
-                <element signature="e#79475#79687#0" />
-                <element signature="e#80189#80325#0" />
-                <element signature="e#80331#80346#0" />
-                <element signature="e#81128#81160#0" />
-                <element signature="e#83060#83831#0" />
-                <element signature="e#83112#83790#0" />
-                <element signature="e#83446#83599#0" />
-                <element signature="e#83982#84007#0" />
-                <element signature="e#84295#84321#0" />
-                <element signature="e#85788#92988#0" />
-                <element signature="e#86308#86477#0" />
-                <element signature="e#86574#89770#0" />
-                <element signature="e#86681#86732#0" />
-                <element signature="e#87422#89483#0" />
-                <element signature="e#89576#89589#0" />
-                <element signature="e#92960#92961#0" />
-                <element signature="e#93266#93285#0" />
-                <element signature="e#94087#96092#1" />
-                <element signature="e#96121#96531#0" />
-                <element signature="e#96210#96345#0" />
-                <element signature="e#96368#96505#0" />
-                <element signature="e#96560#96842#0" />
-                <element signature="e#96656#96814#0" />
-                <element signature="e#96843#96865#0" />
-                <element signature="e#96488#96768#0" />
-                <element signature="e#96782#96999#0" />
-                <element signature="e#97648#97838#0" />
-                <element signature="e#98290#98342#0" />
-                <element signature="e#99958#99972#0" />
-              </folding>
-            </state>
-          </provider>
-        </entry>
-      </file>
-    </leaf>
   </component>
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
@@ -288,6 +69,9 @@
   <component name="Git.Settings">
     <option name="UPDATE_TYPE" value="MERGE" />
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/reservation_golf_for_macmini.py" root0="FORCE_HIGHLIGHTING" />
   </component>
   <component name="IdeDocumentHistory">
     <option name="CHANGED_PATHS">
@@ -377,18 +161,6 @@
       <recent name="E:\python" />
     </key>
   </component>
-  <component name="RunDashboard">
-    <option name="ruleStates">
-      <list>
-        <RuleState>
-          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
-        </RuleState>
-        <RuleState>
-          <option name="name" value="StatusDashboardGroupingRule" />
-        </RuleState>
-      </list>
-    </option>
-  </component>
   <component name="RunManager" selected="Python.lotto_auto_purchasing">
     <configuration name="lotto_auto_purchase_for_macmini" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="work" />
@@ -512,7 +284,7 @@
       </list>
     </recent_temporary>
   </component>
-  <component name="SpellCheckerSettings" BundledDictionaries="0" Folders="0" CustomDictionaries="0" Dictionaries="0" CorrectionsLimit="5" DefaultDictionary="application-level" UseSingleDictionary="true" />
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="false" />
   <component name="SvnConfiguration">
     <configuration />
   </component>
@@ -811,7 +583,14 @@
       <option name="project" value="LOCAL" />
       <updated>1645886316783</updated>
     </task>
-    <option name="localTasksCounter" value="42" />
+    <task id="LOCAL-00042" summary="macpro commit">
+      <created>1645971475517</created>
+      <option name="number" value="00042" />
+      <option name="presentableId" value="LOCAL-00042" />
+      <option name="project" value="LOCAL" />
+      <updated>1645971475517</updated>
+    </task>
+    <option name="localTasksCounter" value="43" />
     <servers />
   </component>
   <component name="TodoView">
@@ -882,12 +661,6 @@
         <entry key="MAIN">
           <value>
             <State>
-              <option name="RECENTLY_FILTERED_USER_GROUPS">
-                <collection />
-              </option>
-              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
-                <collection />
-              </option>
               <option name="FILTERS">
                 <map>
                   <entry key="branch">
@@ -918,6 +691,7 @@
         </entry>
       </map>
     </option>
+    <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="VcsManagerConfiguration">
     <ignored-roots>
@@ -942,7 +716,8 @@
     <MESSAGE value="ipo cc update" />
     <MESSAGE value="ipo cc function 완료" />
     <MESSAGE value="schedule 완성" />
-    <option name="LAST_COMMIT_MESSAGE" value="schedule 완성" />
+    <MESSAGE value="macpro commit" />
+    <option name="LAST_COMMIT_MESSAGE" value="macpro commit" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
